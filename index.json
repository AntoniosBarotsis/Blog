[{"content":"What is Veritas Veritas is a small testing framework that I am building for a friend\u0026rsquo;s compiler. He started working on this project recently and seeing as how I found it very interesting, I decided to contribute to it. I then remembered that I do not know how to build compilers so I instead decided to finally look into things like reflection and frameworks and decided to build one for his language.\nAll cool projects have 2 things in common: a pipeline badge and a mythological name, so I made a pipeline and found out that the Romans had a goddess of truth called Veritas, somehow the Romans did not have a goddess of Unit Testing Frameworks so I unfortunately had to go with that.\nWhat does it do The fact that building a framework that is written in one language and tests another one is complicated should not be a surprise.\nI essentially had to come up with a way of representing Po# code (that\u0026rsquo;s what my friend called the language) as well as compiling, executing it and validating its output. I also wanted to make working with it not too different from commonly used frameworks as in I wanted everything to work through annotations, the tester should not have to worry about what was happening behind the scenes for the tests to work.\nBut what does using Veritas look like? I am glad you asked! Here\u0026rsquo;s an example:\n@Test class TestExample { def valTest1(): (Boolean, String) = \u0026#34;\u0026#34;\u0026#34;def main(): int { val a = 5; print(a); return 0; }\u0026#34;\u0026#34;\u0026#34; .ShouldBe(\u0026#34;5\u0026#34;) .Run() } If the code seems weird to you then worry not for there are docs about it.\nI am not sure if this is a common thing under other languages or maybe under a different name but I have been doing a lot of C# lately and there is this concept of \u0026ldquo;fluent\u0026rdquo; syntax which essentially is code that is very intuitive and easy to read, almost like reading plain English. I was heavily inspired by Fluent Assertions and I want to add/change some stuff on the Veritas interface to make it a little more like it as I really like using it, I believe you can already see that it heavily inspired Veritas' design.\nAt this point, you might have noticed the interesting return type, a boolean string tuple? The boolean indicates whether the test passed or failed while the string holds a message useful for debugging (so if a test fails, it can show the difference between expected and actual value). I believe that because of how my test invocation works I cannot get the return value of the code directly, hence this ugly tuple, it\u0026rsquo;s been some time since I \u0026ldquo;designed\u0026rdquo; this.\nAs I mentioned earlier, runtime exceptions aren\u0026rsquo;t fully implemented into the language yet but when it comes to compiler exceptions you can do the following.\ndef parseErrorTest(): (Boolean, String) = \u0026#34;{def a; a = 5; print(a);}\u0026#34; .ShouldThrow(new ParseException(\u0026#34;\u0026#34;)) Something similar will be added for runtime exceptions with possibly a .WithMessage option to verify that the code crashed with the appropriate message but that will depend on how concise those messages end up being. The compiler error messages are a bit too dev-debug friendly rather than language-user friendly for the time being so .WithMessage does not make sense for compile-time errors, they essentially look like a small stack trace.\nAnother thing that is perhaps worth mentioning is the use of extension methods. Extension methods, in essence, add methods to a class from outside of this class. That sounds terribly boring until you realize how useful it is in some scenarios, in this case, it just looks a bit cleaner. Using extension methods I could ditch the old syntax of the tests that looked like this\ndef parseErrorTest(): (Boolean, String) = new PoSharpScript(\u0026#34;{def a; a = 5; print(a);}\u0026#34;) .ShouldThrow(new ParseException(\u0026#34;\u0026#34;)) and instead go away with the class instantiation. I attached a few methods to the Scala String class which in turn call PoSharpScript under the hood.\nScala implements extension methods through implicit classes;\nimplicit class PoSharpImplicit(val code: String) extends IPoSharp { def ShouldBe(expected: String): PoSharpScript = PoSharpScript(code).ShouldBe(expected) def ShouldThrow(expected: Throwable): (Boolean, String) = PoSharpScript(code).ShouldThrow(expected) } IPoSharp is a trait (or interface) that defines the 2 methods you can see below and PoSharpScript is the main class I use to interact with Po# code. I made use of this recently as a wrapper to the PoSharpScript class since the logic was already implemented there, this is purely for syntactic sugar.\nRunning the test code This part is a little messy. Compiling and writing the assembly code to a file is easy since there are methods for this in the main package of the compiler but I also have to run it somehow. In case you haven\u0026rsquo;t checked out the repo, you need WSL to run the code, you cannot run some of the tools natively on windows. Thankfully, Scala has this Process class that can help with that. I can use that class to spawn an external process that launches WSL and runs MAKE\nimport scala.sys.process.Process Process(s\u0026#34;wsl make TARGET_FILE=$fileName\u0026#34;).!! This snippet returns anything that would normally get printed to the terminal if we were to run this command. TARGET_FILE is a variable used in the makefile to specify the .asm file as well as the executable.\nHow and why did I make use of multi-threading The way the compiler works is: it gets fed some input in Po# from either a .txt file or in this case just a string, that gets parsed and compiled to NASM which gets dumped to a .asm file which we can now finally execute. That\u0026rsquo;s cool but how can we actually get the test output then? Well, there doesn\u0026rsquo;t seem to be a good solution to this, or at least not one that I could come up with. What I settled for is reading the last thing that the code prints which of course requires the snippet to print something. As of now, runtime exceptions have not been fully added yet but when that happens, the same would apply for getting the exception message and I could additionally check the exit code.\nExecuting the test snippets is terribly slow because of all the file accesses + compilation required + spawning the external WSL process. At the time of writing this, 7 tests executed sequentially take 5-6 seconds, this will only get worse with more tests. Since there are only so many tests as of now we can afford to assign one test per thread (which seems to be the most efficient for the time being), that takes the execution time down to around a second or two, this will hopefully scale much better than the sequential solution.\nSince a .asm file gets created for each test I need to make sure that they have unique names so the different threads don\u0026rsquo;t cause issues. I decided to set the file name to packageName.className.methodName which should be unique at all times. These are also cleared after all tests are finished executing so no artifacts are left behind.\nI tried to think a bit ahead here and try to find out what would be a good future-proof optimization to make. Up until this point, spawning one thread per test is the most efficient way of running the tests which if you\u0026rsquo;ve done multi-threading may sound overkill and or counterintuitive but again, the process of running a test is very slow. But since it\u0026rsquo;s probably not a good idea to allocate threads in this way for 1000 tests I decided to allow for chunking the test methods per thread which should be the best of both worlds; it is not fully sequential so we have a performance boost but it also scales better since each thread will be handling more than one test at a time. This should in theory be faster in the future when more tests get added compared to having a set amount of available threads with one test each and having to wait for them to finish running before you allocate another one for the next test. Since it is still early and I can\u0026rsquo;t know what the optimal amount of threads or number of chunks is both are variables.\nDetecting test methods and invoking them I settled with the following:\n All test classes must be in the test package All test methods must be defined inside of a class annotated with @Test All test methods must include the keyword test in their name  I kind of combined what JUnit and PyTest do with the @Test and method names (although I think PyTest does it with filenames instead of method names). I could\u0026rsquo;ve made it so you need the methods annotated instead but decided to go for this instead for no particular reason other than it will look a bit less cluttered. Since I consider tests to have test in their method name one can also easily define helper methods in the class and they won\u0026rsquo;t be treated as tests.\nI found this a great library that allows you to easily use reflection.\nI first need to get all classes inside the test package which I achieve with the following:\nimport org.reflections.Reflections import org.reflections.scanners.Scanners.TypesAnnotated import org.reflections.util.ConfigurationBuilder val reflections = new Reflections(new ConfigurationBuilder() .forPackage(\u0026#34;test\u0026#34;) .setScanners(TypesAnnotated)) I then take the results of that query and extract the class names from the package. At this point, the class names should look something like test.className.\nreflections .getStore .get(\u0026#34;TypesAnnotated\u0026#34;) .get(\u0026#34;scala.reflect.ScalaSignature\u0026#34;) .toArray .filter(_.asInstanceOf[String].contains(\u0026#34;test.\u0026#34;)) .map(_.asInstanceOf[String]) Here\u0026rsquo;s where the more interesting things happen. We need to first get the class and then also create an instance for it\nval testClass = ScalaClassLoader(getClass.getClassLoader).tryToInitializeClass(c) val instance = ScalaClassLoader(getClass.getClassLoader).create(c) This may be a little confusing but the two are different; testClass is essentially a reference to the test class. This later allows us to use getMethods to find the tests inside of it which, in order to run, we need to instantiate it first hence the instance. I made a separate method for executing the test since the code was getting a little cluttered. This just invokes the method and based on the return value, it prints whether the test passed or not.\ndef runTest(instance: AnyRef, el: Method) = { // Catches invalid tests (say main is missing from the code snippet)  try { lastMethodName = el.getName val (output, actual) = el.invoke(instance).asInstanceOf[(Boolean, String)] if (output) { // print passed  } else { // print failed  exitCode = 1 } } catch { case e: Exception =\u0026gt; // print error  exitCode = 1 } } This is a little bit simplified compared to the actual method; I wanted to be able to run this method from different threads so I had to use a synchronized StringBuilder for the outputs. In order to not lock it too often, I chunk the results to a temporary StringBuiler and only push them to the synchronized one once the thread is done executing its tests.\n Was this necessary? No Does it give any significant performance increase? Not really Is it cool that I did it regardless? Yeah 😎  On the topic of cool things, Scala has this library which makes it easy for you to use ANSI escape sequences and add some color to your prints!\nCreating the pipeline Building the pipeline was more complicated than it sounds. For starters, the project initially used SBT. When I was developing the framework I would test run it using Intellij which would compile everything with Java behind the scenes unlike SBT which uses Scala. Turns out the 2 have some runtime differences when it comes to the classloaders and the test classes could not be detected so I eventually made a merge request that made everything work through Gradle which took a bit of fiddling around until everything started working again but at least the classloaders were not complaining anymore.\nAnother issue I had was getting the pipeline to work on an Ubuntu image which seemed to also have some classloader issues because the test methods could not get invoked. In case anyone is willing to take a look and potentially fix it, here\u0026rsquo;s the pipeline run and the pipeline yml file.\nOther than that small hiccup, the rest was fairly standard stuff.\nI want the pipeline to run on master pushes and on pull requests. The job should run on a windows image, I checkout to the repo and use this action to set up WSL, Gradle has a short post about setting up a Gradle build workflow here which I used for the setup and finally I install any WSL dependencies I need and run the Gradle task for the tests\nname: Build and Test on: push: branches: - \u0026#34;master\u0026#34; pull_request: jobs: gradle: runs-on: windows-2022 steps: - uses: actions/checkout@v2 - name: Set up WSL uses: Vampire/setup-wsl@v1 - uses: actions/setup-java@v2 with: distribution: temurin java-version: 17 - name: Setup Gradle uses: gradle/gradle-build-action@v2 with: gradle-version: 7.3 - name: Execute Gradle build run: gradle build - name: Install dependencies shell: wsl-bash {0} run: |apt update apt install make nasm gcc -y - name: Run tests run: gradle runTests About a month and a half had passed since I started working on Veritas before I finally saw this\nand this\nThe future As I mentioned earlier, the framework is not done which is to be expected since the language itself is not done evolving. Now that the the pipeline is also complete I have reached a point where the framework is both capable enough to test anything currently present in the language and can ensure that nothing breaks over time through the pipeline.\nThat being said, I now have the freedom to worry about more \u0026ldquo;trivial\u0026rdquo; things such as\n Actual error handling that does not simply wrap the entire framework in a try-catch Improved error messages for anything that could go wrong Steal get inspiration from Fluent Assertions on new things to add  Of course, this is what I can come up with now, more stuff will probably appear along the way as the language evolves.\nClosing All in all, it has been really cool and interesting to work on this. It was really interesting to dive into reflection, it really is fascinating to me how you can interact with a project\u0026rsquo;s source code through \u0026hellip; more source code. It also gives you a better understanding of how these frameworks function which is great. Multi-threading was another thing I enjoyed getting into, I recently developed an interest to parallel programming and this is one of the ways I pursued that interest. It\u0026rsquo;s nice knowing your code helps someone and makes their lives easier but also more boring because who likes writing tests am I right?\nReally interested in seeing where this will go from now, till next time!\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/posharp/","summary":"What is Veritas Veritas is a small testing framework that I am building for a friend\u0026rsquo;s compiler. He started working on this project recently and seeing as how I found it very interesting, I decided to contribute to it. I then remembered that I do not know how to build compilers so I instead decided to finally look into things like reflection and frameworks and decided to build one for his language.","title":"Veritas"},{"content":"Introduction I recently started working on a command line tool that uses git hooks to remind you to run your tests and builds before pushing your code among other stuff and I decided to package that and publish it so anyone could use it. The project itself is nothing too impressive or innovative so in this post I will be mostly focusing on the packaging and publication process rather than the project itself but in case you are interested in checking it out, click here and go make some issues :)\nI\u0026rsquo;ll be explaining how I published said package and how to make a Github Actions CD workflow to publish your new releases automatically.\nWhy I feel like most if not all developers find the idea of making their work available for anyone to check out and use an exciting one and I definitely relate to that. I personally really like working on things that can be used by other developers specifically and that\u0026rsquo;s the main reasons why I started this project and why I decided to make it easily accessible to anyone (unless you are not on windows because I was too lazy to check how that would work).\nI decided early on that I wanted to publish my code on 2 platforms; the package manager of my language of choice (in this case, NuGet) and a more general purpose package manager like Chocolatey so that my audience would not be limited to developers from my tech stack only.\nWhat did I build exactly The project was built using C# mostly because of this video I came across (great YouTuber by the way, make sure to check his channel out for C# content). TLDR; C# has this thing called dotnet tools which are essentially command line applications that are very easy to make and package. The linked video walks you through creating one from scratch.\nUploading to NuGet Preparing Once you have your CLI tool up and running there\u0026rsquo;s only that many steps left to push it to NuGet.\nThe mentioned video already guides you through adding most of the stuff that you need in your .csproj file but here\u0026rsquo;s a few more things you might want to add:\n  A README file\nIf you want your NuGet package to display the README file you spent hours filling with meaningless badges, this is for you. All you have to do is add the following:\n\u0026lt;PropertyGroup\u0026gt; ... \u0026lt;PackageReadmeFile\u0026gt;README.md\u0026lt;/PackageReadmeFile\u0026gt; \u0026lt;/PropertyGroup\u0026gt; \u0026lt;ItemGroup\u0026gt; \u0026lt;None Include=\u0026#34;../README.md\u0026#34; Pack=\u0026#34;true\u0026#34; PackagePath=\u0026#34;\\\u0026#34; /\u0026gt; \u0026lt;/ItemGroup\u0026gt; This tells NuGet to use our README.md file as the package README file but for that to work we must make sure that this is packaged into our nupkg file. This might be different in your project but my project has a separate folder for the actual code instead of it also being in the root of the project\n│ README.md │ Rember.sln │ ├───publish │ Rember │ Rember.exe │ ├───Rember │ │ Rember.csproj Because of that, my Include parameter goes a directory up to reference the README file.\n  Other useful tags might include RepositoryUrl to link your Github repo and PackageTags to provide a list of space-delimited tags for your package.\n  I do also recommend specifying the RuntimeIdentifier to something like win-x64 although from what I understand this is not necessary but better safe than sorry!\n  Pushing the Package That pretty much concludes the needed preparations for NuGet so time to actually push the thing.\nRun dotnet pack and you should get something along the lines of Successfully created package 'path/to/package.nupkg'.\nNext you want to grab yourself a NuGet API Key from here and run the following command:\ndotnet nuget push path/to/package.nupkg \\  --api-key \u0026lt;API_KEY\u0026gt; \\  --source https://api.nuget.org/v3/index.json If all goes well your package will be soon available on NuGet! Wasn\u0026rsquo;t that simple?\nUploading to Chocolatey Preparing Chocolatey requires you to provide a so called nuspec file which essentially provides some details for your package. I personally found their docs a bit confusing so if you get confused perhaps looking over at my repository could help you out more after you\u0026rsquo;ve read through them.\nYou will see that most of the stuff we specify are essentially the same as what we specified earlier for NuGet. Only thing to note here is that you want to make sure that everything your package needs ends up in the tools folder.\nCompiling Uploading to Choco is a little more complicated. First of all, we need to compile our code to a single file that has everything it needs to run bundled inside of it aka, a self contained file. It is also a good idea to try and remove anything that is not used in terms of libraries considering how much larger this file is going to be compared to the nupkg file we created earlier. Take a look at the docs for dotnet publish but TLDR; our command will look something like this:\ndotnet publish -o tools \\  --self-contained True \\  /property:PublishTrimmed=True \\  /property:PublishSingleFile=True The reason why I specify these properties in the arguments of the command instead of in the csproj file is because I would have to keep toggling them on and off depending on whether I was targetting NuGet or Choco.\nI also specify the following in the csproj file to hopefully cut the executable file size down a bit more:\n\u0026lt;DebugType\u0026gt;none\u0026lt;/DebugType\u0026gt; \u0026lt;DebugSymbols\u0026gt;false\u0026lt;/DebugSymbols\u0026gt; \u0026lt;Configuration\u0026gt;release\u0026lt;/Configuration\u0026gt; This should create a .exe file in the tools folder.\nPushing to Chocolatey We are almost done! We now only need to run the following:\nchoco pack choco push --api-key=\u0026lt;API KEY\u0026gt; Your API key can be found here and I do not know why navigating to your profile page is so hard on their website.\nPublications on Chocolatey take way longer than NuGet (around 1-3 hours from personal experience) so sit back, go grab yourself some coffee, do some laundry, watch some YouTube, call your friends, finish that one side project you abandoned 7 months ago, and check your email every 2 minutes in case something goes wrong with the publication.\nTime to make a Workflow Workflows are great! They do the boring, repetitive stuff for you automatically so you don\u0026rsquo;t have to worry about forgetting them or doing something wrong, your project looks cooler and more serious with them but most importantly, from what I understand, they qualify you for DevOps positions which pay quite well so that\u0026rsquo;s the main reason why you should care about making them 👍\nFeel free to check Github\u0026rsquo;s docs.\nWe first start by specifying that we want our workflow to run on a new release publication\non: release: types: [published] The release event has a bunch of different types that are explained very nicely in the documentation, I personally chose published which gets triggered for normal as well as pre-releases.\nThe good news is that this is a very simply workflow because we\u0026rsquo;ve already figured out how to do most of the work from our terminals!\njobs: publish: runs-on: windows-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-dotnet@v1 with: dotnet-version: \u0026#39;6.0.x\u0026#39; # Nuget  - run: dotnet pack - run: dotnet nuget push .\\Rember\\nupkg\\*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json name: Nuget publish # Choco - run: dotnet publish -o tools --verbosity normal --self-contained True /property:PublishTrimmed=True /property:PublishSingleFile=True  - run: choco pack - run: choco push --api-key=${{ secrets.CHOCO_API_KEY }} name: Choco publish As you can see, I checkout to my repository and set up Dotnet 6 before running the exact same commands I mentioned earlier. The only thing left now is to set the NUGET_API_KEY and CHOCO_API_KEY secrets in your github repository and create your first release!\nClosing Overall, I feel like this was a little less exciting than some of my other posts but to me, the whole process of publishing this project was quite exciting and I wanted to write something about it. Hopefully this inspires someone to go make his own package or library and make it available, same way Nick\u0026rsquo;s video inspired me to work on this project. Till next time!\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/zipitandshipit/","summary":"Introduction I recently started working on a command line tool that uses git hooks to remind you to run your tests and builds before pushing your code among other stuff and I decided to package that and publish it so anyone could use it. The project itself is nothing too impressive or innovative so in this post I will be mostly focusing on the packaging and publication process rather than the project itself but in case you are interested in checking it out, click here and go make some issues :)","title":"Zip it and ship it!"},{"content":"It\u0026rsquo;s been sometime since my last post but I just now got to work on the project again.\nProgress since last time The bulk of the additions since last time concern authentication;\n Added Login and Refresh endpoints. I\u0026rsquo;m not sure if the concept of refresh tokens were there last time but they are there now. The idea is that you have the normal JSON Web Token which expires 10 minutes after you create it (reminder to self to check if I handle timezones properly at some point) but the user also gets a refresh token on login which expires 6 months later, this way whatever client interacts with the app won\u0026rsquo;t have to ask the user for his credentials since it can just keep using and refreshing the token. The database now also stores Orders and MenuItems. I realized my caching had a small bug where User.PastOrders would not get populated after parsing the results from the cache entry even though the data was in the returned JSON string. This got my stuck for an afternoon. I tried a few different things like adding empty constructors to the User class, adding a constructor that takes the MenuItems as input and annotating it with [JsonConstructor] but none of these worked. Turns out I\u0026rsquo;d forgotten to add a setter to the MenuItems attribute\u0026hellip; I had another bug with the refresh token being considered invalid if the token was expired and it expiring a few minutes off of when it should be but those were more like \u0026ldquo;code wrong\u0026rdquo; instead of an elaborate, complicated issue where turns out you just forgot a setter. Most of these were added last time but since I didn\u0026rsquo;t mention this before; I made a few Powershell scripts for things like starting or watching the app, applying migrations etc. While those do obviously work with the dotnet CLI (which is what the scripts use as well) you had to keep adding the project flag to point the CLI to the correct project which got tedious quite fast and is the only reason why I bothered making these, you\u0026rsquo;re welcome. I learned about this pretty handy feature of C# which is extension methods. Basically, you create a static method that ends up being used as a method of another class without needing to create a whole different class that inherits from the one you want to add the method to or having to put the class instance inside the method which just looks weird. I used this for having all my Include statements for the User class; because User is a very decently nested class, I have to make a few unions everytime I make a database call and instead of putting the same unions in all my User queries I made an extension method for the User DbSet so that all those unions are in one place. Using it is very easy as instead of doing context.Users I do context.Users.BuildUser.Result where BuildUser is my extension method\u0026rsquo;s name. As you may notice, it is an async method which is not necessary for this to work but I also use it to calculate and populate some fields that are not mapped to the database such as the price of an order (which is the sum of all the items in that order). This was overall a very useful feature with way too many applications and I was completely unaware of it. I will definitely be finding many uses for it in the future. Not as exciting but finally got around making an endpoint that returns your own user now that authentication works. I just use the user id that I store in the token to make a findOne database query. Lastly, because I also took some time to test most stuff, I realized that the Authentication service was a bit too complicated and hard to test so I decided to move some of the code to a separate \u0026ldquo;Token\u0026rdquo; service. Honestly, the biggest perk of testing for me is how it forces you to rethink your code quality. Most of the times I end up doing quite a bit of manual testing before I write my tests and thus I hardly ever actually discover bugs through my testing (which may or may not be a bad thing) but the refactoring I end up doing pretty often is always cool.  The next steps Not entirely sure when I\u0026rsquo;ll be working on this again (hopefully soon!) but here\u0026rsquo;s the plan for next time.\n  Extend the cache for the findOne user endpoint and whichever new entities I end up adding\n  I want to look into a few potential refactorings including where the cache logic is at the moment; right not cache lookups happen in the services but I feel like it makes more sense to move those to the repositories since it is still a data access operation and the service should not care about where the data comes from as long as it\u0026rsquo;s there.\n  I want to look into potential exceptions that I\u0026rsquo;d want to add. One example of this would be invalid user credentials (empty names or other stuff like that) and just generally things that could go wrong with user input. With this I also want to take a look at my response codes and change them where needed.\n  I think I\u0026rsquo;ll try to work on items before the next time and I really want to have a paginated output. I\u0026rsquo;m thinking of having a getAll endpoint that will give you all items from a restaurant but in pages. You should be able to change the page size (with some limitations of course) and select what page number you want returned. A really cool thing to add here would be to have products presorted in the database but I am not sure if\n that is possible or efficient  I will definitely try looking into this though. Adding to this, I\u0026rsquo;ll start looking into indices since I do want to have the output of this sorted in some way.\n  I still haven\u0026rsquo;t tested tokenService so there\u0026rsquo;s that. Some of the stuff in there seemed rather hard to test (at least compared to other stuff I had to test before) which is also why I moved it out of the authentication service.\n  I need to add DTOs. So far, only users have one and it most likely will have to be changed.\n  Closing Thank you for reading once again! The repo can be found here. I am glad that I am still working on this albeit at a pretty slow pace. I often do not have that much energy to spend on this after university work unfortunately but as we say in Greece, \u0026ldquo;rather slow than never\u0026rdquo;. Till next time.\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/demeter/part_2/","summary":"It\u0026rsquo;s been sometime since my last post but I just now got to work on the project again.\nProgress since last time The bulk of the additions since last time concern authentication;\n Added Login and Refresh endpoints. I\u0026rsquo;m not sure if the concept of refresh tokens were there last time but they are there now. The idea is that you have the normal JSON Web Token which expires 10 minutes after you create it (reminder to self to check if I handle timezones properly at some point) but the user also gets a refresh token on login which expires 6 months later, this way whatever client interacts with the app won\u0026rsquo;t have to ask the user for his credentials since it can just keep using and refreshing the token.","title":"Project Demeter: Part 2"},{"content":"Progress since last time When I made the first blog post, I basically just had an empty project with not much code in it. At the time of writing this, I still don\u0026rsquo;t have an insane amount of progress done but there\u0026rsquo;s definitely a lot more things going on.\nHere\u0026rsquo;s some of the \u0026ldquo;big\u0026rdquo; stuff that have been added:\n  Added a PSQL database container\nI decided to use a Postgres database because of the PostGIS plugin which will allow me to work with geolocation data later on. Right now, there\u0026rsquo;s not a whole lot going on in the database; I\u0026rsquo;ve only added the User and Order fields because I wanted to implement authentication. The next model that should get added soon will probably be the Owner and after that I think I\u0026rsquo;ll rethink the rest of my models and eventually add those all together. I also created a class that applies any pending migrations to the database and clears + seeds it every time the server runs. The latter will of course not be around when the app is complete but for now it is very handy for manual testing. You can find the class here if you want to see how that works but in essence it is nothing more than one hard coded user with one past order with no items (did not want to also add items this soon for testing).\n  Added a Redis database container\nI\u0026rsquo;ve been thinking of using a cache for a while in my project but was limited by the fact that I couldn\u0026rsquo;t run more than one container when hosting my apps as stated earlier so was pretty excited for this to say the least. I came up with a weird (perhaps overcomplicated way) of setting the key values using enums, idea being that I don\u0026rsquo;t randomly make a small typo and end up getting cache misses when I shouldn\u0026rsquo;t be. The general cache service can be found here and an example usage for users is here.\n  Used a bunch of libraries that I\u0026rsquo;ve wanted to glue together for some time, namely:\n Automapper MediatR with CQRS Serilog  Automapper is extremely useful and will definitely be using it in probably all my future projects. In my last \u0026ldquo;big\u0026rdquo; project which was Gromceri (haven\u0026rsquo;t talked much about it and have also not finished + kind of abandoned but might get back to that at some point, you can read some stuff about it here) I was using function expressions which had the advantage of being chainable with my LINQ queries (and thus looking cool) but looking back, that was not such a clean looking solution and I also do not think that it was that great of an idea to convert entities to their DTOs right after a query.\nMediatR and CQRS are both pretty cool and I can kind of see why they would be useful in very big, complicated projects but I feel like they are way too verbose for a one man project. However, that being said they do help keep the overall flow cleaner by separating the layers which is why I will rethink whether I want to stick to MediatR at the end of this project\u0026rsquo;s development when I\u0026rsquo;ll have a better idea of it.\nYes I\u0026rsquo;ve been wanted to use loggers properly in an actual project for some time. This will definitely get more interesting once I add Elasticsearch and Kibana to the project but even now it is cool. I also want to add error handling middleware which will definitely leverage the logger.\n  Finally did some proper testing!\nIf you visit the project you\u0026rsquo;ll see that I\u0026rsquo;ve added Codecov to it to force myself to test more. At the moment I have only been testing my Domain which is where the models and their Services live and I\u0026rsquo;m not sure if I will also test my other 2 layers.\nOne thing that I want to admit is that testing definitely forces you to write cleaner code. I really appreciate dependency injection and an overall separation of functionality a lot more after having sank quite some time into testing my code.\nA few very helpful libraries I used for my tests are:\n  Autofixture\nThis is such a great tool and I wish I learnt about it earlier. TLDR: It is used to instantiate your classes with random data. The great thing about it is that, well, you don\u0026rsquo;t have to type everything out yourself which except for being time saving, saves you the errors when your classes change and can also help in discovering errors with your logic given specific input (since it is random).\nWhat I really like about it is that you can also control the values of specific attributes while everything else is random. For example, one thing I did in some of my tests is have a predefined order price and I wanted the menu items themselves to have random data but that given price, this is very easy to do with this package!\n  NSubstitute\nNSubstitute is used for mocking, that\u0026rsquo;s it. It has a very clean syntax that really works for me and it just works. I don\u0026rsquo;t think I\u0026rsquo;ll be switching that for a different mocking library any time soon.\n  FluentAssertions\nSimilarly, Fluent Assertions have a very neat syntax for assertions that just works nicely. Also coming from Java\u0026rsquo;s JUnit, testing for exceptions finally has syntax you can memorize.\n    Added JWT Role based authentication\nIt is not the first time I implemented JWT in a project but was very glad that it took me about an hour instead of a few weeks like last time. I borrowed much of the configuration for stuff like password strength and what not from that previous implementation but reworked both the classes associated with authentication themselves and their position in the project. I also feel like I added enough self explanatory exception messages for when stuff fails. I also added roles to the authentication scheme (which I think work but I haven\u0026rsquo;t added owners yet so can\u0026rsquo;t be certain). This was a lot easier than I thought it was gonna be. The only interesting thing about this is that I used an enum for the role which I found out how to store as a string to the database (and in the response DTO) instead of an int.\nSomething that wasn\u0026rsquo;t great was how the userManager class from the Identity package does not have a relevant interface which meant I couldn\u0026rsquo;t really test it so I instead made my own interface with the methods that I am going to need and made the implementation use an instance of userManager which has the same effect but makes it testable.\n  Something that doesn\u0026rsquo;t really fit anywhere else is that I did a bit more research on RabbitMQ and found out that what I probably want to use is the RPC functionality it offers which I think will require another project running. If that is the case I will probably make a very simple, one endpoint separate API project that I can run from the docker compose file. Since I don\u0026rsquo;t actually want to do something more with it other than make it wait for a bit as if it is processing the payment or whatever and then return \u0026ldquo;payment successful\u0026rdquo; this should work fine. I am not entire sure how this will work yet (does the code wait for the remote call to be completed or does it receive a notification?) but that should be one of the very last things that I will add to the project so it is not really something to worry about at the moment.\nThe next steps I believe that I will be toning down the amount of work that I put into the project for a little while because of some irl issues and university + work being a thing. I also don\u0026rsquo;t have an exact plan of what to do next but here\u0026rsquo;s some of the stuff that I will work on for the next post\n Add more models to the database Use redis for most if not all endpoints Add a refresh token for the JWT Make a login and refresh endpoint Have a user endpoint that returns data only for the user making the request Add Elasticsearch and Kibana (?)  Closing As always, thanks for reading! The repo can be found here. I am really proud of the progress of the project so far and I am just hoping that I can get back to being productive on it after I deal with everything else going on in my life right now\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/demeter/part_1/","summary":"Progress since last time When I made the first blog post, I basically just had an empty project with not much code in it. At the time of writing this, I still don\u0026rsquo;t have an insane amount of progress done but there\u0026rsquo;s definitely a lot more things going on.\nHere\u0026rsquo;s some of the \u0026ldquo;big\u0026rdquo; stuff that have been added:\n  Added a PSQL database container\nI decided to use a Postgres database because of the PostGIS plugin which will allow me to work with geolocation data later on.","title":"Project Demeter: Part 1"},{"content":"What is Project Demeter This is my latest passion past-time toy project that I will be working on for some time. You can read some details about it here but long story short: it will be a food ordering service minus the payment bit.\nAnd since I posted the repository, I should note that I have already changed my mind for some of the stuff mentioned there (mainly that I will be using Postgres instead of SQLite and that I will definitely use RabbitMQ) so don\u0026rsquo;t take everything I said there word for word as this is still pretty early in development.\nWhy I think it will be a great learning experience for me (if I actually push myself to finish it).\nThere are so many things that I want to make use of and it feels pretty overwhelming at the moment but I\u0026rsquo;m sure that will improve once I start actually working on it. So far the only thing that I have figured out is how to use PostGIS (which is a Postgres plugin that allows you to work with spatial data) to make queries about stuff\u0026rsquo;s locations.\nMy Progress I figured that would be a good starting point considering that one of the main features I want this service to have is making radial distance queries around your location for near by restaurants. The SQL itself is not hard, I just have to figure out how to convert that to something EF Core understands and am set for that. Other than that, the only thing that I have at the moment is a basic project structure with no actual code in it. I will be probably working on figuring out what my models should look like today and after that\u0026rsquo;s done I\u0026rsquo;ll see what follows.\nPart of the reason why I\u0026rsquo;m writing this is because it is actually pretty decent motivation for me to keep going but also because I feel like this would be very interesting for anyone trying to start a new project to read through once I\u0026rsquo;m finished.\nI think that that\u0026rsquo;s about it for now so see you all in part 1 hopefully soon.\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/demeter/part_0/","summary":"What is Project Demeter This is my latest passion past-time toy project that I will be working on for some time. You can read some details about it here but long story short: it will be a food ordering service minus the payment bit.\nAnd since I posted the repository, I should note that I have already changed my mind for some of the stuff mentioned there (mainly that I will be using Postgres instead of SQLite and that I will definitely use RabbitMQ) so don\u0026rsquo;t take everything I said there word for word as this is still pretty early in development.","title":"Project Demeter: Part 0"},{"content":"Introduction Most Web API templates I could find online do not have testing pre configured in them and the official ones do not have it at all so I thought that I would make a post about setting up basic unit tests as well as mocking dependencies.\nI will be using XUnit which is one of the most used testing frameworks for .NET as well as FakeItEasy for mocking. In the end I will also use Coverlet and Codecov for coverage reports.\nThe API will be the weather forecast template with the addition of a service layer which is what we will be testing. Let\u0026rsquo;s get started!\nCoding Creating the project I will be creating a solution with 2 projects, one being the API and the other one being the one for testing.\nWe start by creating a folder for the solution:\nmkdir TestingAPI cd TestingAPI dotnet new sln We can now create the API project and add it to our solution:\ndotnet new webapi -n src dotnet sln add src/src.csproj Similarly for our test project:\ndotnet new xunit -n test dotnet sln add test/test.csproj Running dotnet run --project src should spin up the server and sure enough, visiting https://localhost:5001/weatherforecast returns us the expected responce.\nCreating the service I will create a Services folder and inside it add 2 files: a service interface and its implementation\n// IMyDependency.cs using System.Threading.Tasks; namespace src.Services { public interface IMyDependency { Task\u0026lt;string\u0026gt; GetDataFromDatabaseAsync(); } } // MyDependency.cs using System.Threading.Tasks; namespace src.Services { public class MyDependency: IMyDependency { public Task\u0026lt;string\u0026gt; GetDataFromDatabaseAsync() { return Task.FromResult(\u0026#34;Hello From MyDependency!\u0026#34;); } } } Let\u0026rsquo;s head to our controller and make use of the service we just created there so we can make sure it works:\n// WeatherForecastController.cs // ... private readonly ILogger\u0026lt;WeatherForecastController\u0026gt; _logger; private readonly IMyDependency _dependency; public WeatherForecastController(ILogger\u0026lt;WeatherForecastController\u0026gt; logger, IMyDependency dependency) { _logger = logger; _dependency = dependency; } // ... [HttpGet] public async Task\u0026lt;IEnumerable\u0026lt;WeatherForecast\u0026gt;\u0026gt; Get() { _logger.LogInformation(await _dependency.GetDataFromDatabaseAsync()); // No changes below this  var rng = new Random(); return Enumerable.Range(1, 5).Select(index =\u0026gt; new WeatherForecast { Date = DateTime.Now.AddDays(index), TemperatureC = rng.Next(-20, 55), Summary = Summaries[rng.Next(Summaries.Length)] }) .ToArray(); } Lastly we head to Startup.cs to register the implementation\n// Startup.cs public void ConfigureServices(IServiceCollection services) { services.AddScoped\u0026lt;IMyDependency, MyDependency\u0026gt;(); // ... } If we now run the app and hit the endpoint we should see Hello From MyDependency! logged in the console.\nWriting our tests Let\u0026rsquo;s navigate to our test project and write our first test\n// UnitTest1.cs using System.Threading.Tasks; using FakeItEasy; using src.Services; using Xunit; namespace test { public class UnitTest1 { [Fact] public async Task Test1() { var myDependency = new MyDependency(); Assert.Equal(\u0026#34;Hello From MyDependency!\u0026#34;, await myDependency.GetDataFromDatabaseAsync()); } } } Here I changed the return type from void to async Task since the method we want to test is async. Running the test with dotnet test passes but this is not what we want.\nIn a normal project this method could require a database connection that we probably do not want to make use of in our tests for various reasons. This is where mocking comes into play; we can provide a fake implementation to our service methods. It might not be as apparent here why this could be useful so let me explain.\nUsually the way I like to structure my apps is to split them into 3 layers\n Controllers: handle http requests, call service layer Services: business logic, call repository layer Repositories: Handle database queries  Coming from a Spring Boot background, my terminology might be a bit different than what is normally used for .NET projects but the idea is the same; split your logic into layers and use dependency injection to interact between them.\nThe most important layer to test is the service layer since that\u0026rsquo;s where all the actual \u0026ldquo;programming\u0026rdquo; is. In order to test that I would have to mock my repository interface and have it return arbitrary fake data without actually using the database. You can imagine how bad of an idea it would be if someone was to test creations, updates or deletions while using the actual database\u0026hellip;\nThere are some other options such as using a different, in memory database for testing but we will not be covering that in this post.\nSo back to our test, how do we mock the dependency?\n// UnitTest1.cs using System.Threading.Tasks; using FakeItEasy; using src.Services; using Xunit; namespace test { public class UnitTest1 { [Fact] public async Task Test1() { var myDependency = new MyDependency(); Assert.Equal(\u0026#34;Hello From MyDependency!\u0026#34;, await myDependency.GetDataFromDatabaseAsync()); } [Fact] public async Task Test2() { var myDependency = A.Fake\u0026lt;IMyDependency\u0026gt;(); A.CallTo(() =\u0026gt; myDependency.GetDataFromDatabaseAsync()).Returns(Task.FromResult(\u0026#34;Hello from mocked\u0026#34;)); Assert.Equal(\u0026#34;Hello from mocked\u0026#34;, await myDependency.GetDataFromDatabaseAsync()); } } } Using the FakeItEasy package we define an instance of the IMyDependency interface using A.Fake. This right now does nothing; we have to explicitly define what happens when one of the interface methods gets called, we do that with A.CallTo which accepts a lambda of the method in question. I am using Task.FromResult because the method is async. If we run the test we can see that it passes which means that we successfully changed the \u0026ldquo;implementation\u0026rdquo; of our dependency. Again, this is what would normally be a repository and a database call changed to hard coded data, similar to what would be returned from said database call.\nAdding a CI pipeline with Codecov Another thing we could do is add Codecov to get a detailed view of our test coverage. The best way to do that in my opinion is to create a Continuous Integration (CI) pipeline on Github that will generate and push code coverage information everytime we update the repository.\nFirst go to Codecov\u0026rsquo;s website and create an account. Get your CODECOV_TOKEN and create a repository secret with its value on your github repository, we will be using this later when we push our data to Codecov.\nWe also need to create a codecov.yml file with some basic configuration. Here\u0026rsquo;s what I had from a previous project:\n# codecov.yml comment: false ignore: - \u0026#34;^(?!.*Services).*$\u0026#34; coverage: status: project: default: target: auto threshold: 1% informational: true patch: default: target: auto threshold: 1% informational: true The only interesting thing about this is that I ignored every folder that does not include Services since that\u0026rsquo;s the only thing we tested.\nLet\u0026rsquo;s create the .github/workflows/dotnet.yml file and use the Github Actions template for .NET apps which includes building and testing. We only have to add one more step for codecov to work:\n# dotnet.yml name: .NET on: push: branches: [ master ] pull_request: branches: [ master ] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Setup .NET uses: actions/setup-dotnet@v1 with: dotnet-version: 5.0.x - name: Restore dependencies run: dotnet restore - name: Build run: dotnet build --no-restore - name: Test run: dotnet test --no-build --verbosity normal --collect:\u0026#34;XPlat Code Coverage\u0026#34; -- IncludeDirectory=\u0026#34;[.]*Services[.]*\u0026#34; - name: Codecov uses: codecov/codecov-action@v2 with: token: ${{ secrets.CODECOV_TOKEN }} The Codecov action offers a few useful parameters for you to use so if you are interested, read their docs!\nWith all this done and pushed you just want to wait for the Action to complete. After that\u0026rsquo;s done I can take a look at my coverage\nThis is very useful to look at when dealing when more than one directory unlike here.\nYou can also take a look at the exact spots in your code that you tested/missed\nAnd finally (but certainly most importantly), codecov gives you a badge to display on your Github repo to show everyone how well tested your code is. What\u0026rsquo;s the point of testing if you don\u0026rsquo;t let everyone know you did after all?\nConclusion Testing is basically essential to any application that is not yet another personal project doomed to be abandoned a few weeks after its inception. If you decide to test your project I do not see why you wouldn\u0026rsquo;t include coverage reports, whether automated or not. Codecov (and other similar tools) allow you to set a lot of rules that would fail your pipeline if not met such as: minimum coverage, a minimum threshold of allowed coverage drop on new commits and a lot more.\nI hope you got something out of this post and thanks for reading! :)\nYou can find the code here.\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/aspnet_testing/","summary":"Introduction Most Web API templates I could find online do not have testing pre configured in them and the official ones do not have it at all so I thought that I would make a post about setting up basic unit tests as well as mocking dependencies.\nI will be using XUnit which is one of the most used testing frameworks for .NET as well as FakeItEasy for mocking. In the end I will also use Coverlet and Codecov for coverage reports.","title":"Testing an ASP .NET Core project"},{"content":"What is the ELK stack? With today\u0026rsquo;s applications growing in complexity rapidly, debugging and efficiently digesting logs have become crucial. That is the problem that the ELK stack is trying to solve.\nThe ELK stack consists of:\n Elasticsearch: A distributed search engine with highly refined analytics capabilities Logstash: A data-processing pipeline that collects data and delivers it to Elasticsearch Kibana: A visualization platform built expressly for Elasticsearch  These three together make for a great way of digesting aggregated logs from your application through visualisations.\nWhat will we be creating? We will be making a simple API (the default weather forecast template), have it produce logs using Serilog into elasticsearch and viewing them through kibana.\nFor this post I will be assuming you have used C# before and thus you have a ready-to-go set up on your machine.\nCoding Let\u0026rsquo;s first make our project using the dotnet cli, I will name mine elk\ndotnet new webapi -n elk Verify that everything is working fine by running the API\ndotnet run and visiting https://localhost:5001/weatherforecast. I am using Insomnia for my http client but Postman or your browser would also work.\nSetting up middleware I will be setting up middleware to handle logging as it is a cleaner solution than logging in each request. You can read more about middleware here.\nI created the following file:\n// MyMiddleware.cs using System.Threading.Tasks; using Microsoft.AspNetCore.Http; using Microsoft.Extensions.Logging; namespace elk { public class MyMiddleware { private readonly ILogger\u0026lt;MyMiddleware\u0026gt; _logger; private readonly RequestDelegate _next; public MyMiddleware(RequestDelegate next, ILogger\u0026lt;MyMiddleware\u0026gt; logger) { _next = next; _logger = logger; } public async Task InvokeAsync(HttpContext context) { _logger.LogInformation(\u0026#34;Hello from middleware\u0026#34;); await _next(context); } } } and added the following line to the Configure method in Startup.cs\n// Startup.cs -\u0026gt; Configure app.UseMiddleware\u0026lt;MyMiddleware\u0026gt;(); If we now run the app and make a request to our endpoint we can see Hello from middleware logged to the console.\nKnowing that that works lets change the middleware a bit so it can catch and handle exceptions\n// MyMiddleware.cs using System; using System.Threading.Tasks; using Microsoft.AspNetCore.Http; using Microsoft.AspNetCore.Mvc; using Microsoft.Extensions.Logging; namespace elk { public class MyMiddleware { private readonly ILogger\u0026lt;MyMiddleware\u0026gt; _logger; private readonly RequestDelegate _next; public MyMiddleware(RequestDelegate next, ILogger\u0026lt;MyMiddleware\u0026gt; logger) { _next = next; _logger = logger; } public async Task InvokeAsync(HttpContext context) { try { await _next(context); } catch (Exception exception) { _logger.LogError(exception, \u0026#34;Something went wrong\u0026#34;); await HandleExceptionAsync(context, exception); } } private static Task HandleExceptionAsync(HttpContext context, Exception ex) { context.Response.StatusCode = 500; return context.Response.WriteAsync(\u0026#34;An exception occured\u0026#34;); } } } If we now run the app again we should see nothing logged in the console. If we add a throw new Exception(); statement in our controller we should get a 500 Response back saying that an exception occured and also see the exception logged in the terminal.\nI am going to add the following to the controller so we get errors at random from the endpoint\nif (rng.Next(0, 10) \u0026lt; 2) throw new Exception(); Setting up the Elasticsearch and Kibana containers I will be using Docker to run Elasticsearch and Kibana so first thing I want to do is make a docker-compose.yml file.\n# docker-compose.yml version: \u0026#34;2.4\u0026#34; services: es: image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2 container_name: es ports: - \u0026#34;9200:9200\u0026#34; cpu_count: 1 mem_limit: 4g ulimits: memlock: soft: -1 hard: -1 nofile: soft: 65536 hard: 65536 environment: - cluster.name=es-docker - cluster.initial_master_nodes=node1 - node.name=node1 - bootstrap.memory_lock=true - \u0026#34;ES_JAVA_OPTS=-Xms2g -Xmx2g\u0026#34; kib: image: docker.elastic.co/kibana/kibana:7.14.2 container_name: kib ports: - \u0026#34;5601:5601\u0026#34; depends_on: - es cpu_count: 1 mem_limit: 4g environment: ELASTICSEARCH_URL: http://es:9200 ELASTICSEARCH_HOSTS: http://es:9200 A few things about this;\n It seems that at the time of writing this, version 3 does not support resource limits without using swarm hence the downgrade to 2.4 (please use resource limits if you want your computer to be usable) The cluster.initial_master_nodes and node.name must have the same value as I want to use a one node cluster The ELASTICSEARCH_URL and ELASTICSEARCH_HOSTS params are needed since by default these will try to find the elasticsearch server at http://localhost:9200.  Setting up Serilog We will be using the Serilog.AspNetCore (for logging), Serilog.Sinks.Elasticsearch (for pushing our logs to elastic) and Serilog.Enricher.Environment (for adding properties from System.Environment) packages.\nOnce you have those installed, go to the appsettings.json file, remove the Logging section and add the following:\n\u0026#34;Serilog\u0026#34;: { \u0026#34;MinimumLevel\u0026#34;: { \u0026#34;Default\u0026#34;: \u0026#34;Information\u0026#34;, \u0026#34;Override\u0026#34;: { \u0026#34;Microsoft\u0026#34;: \u0026#34;Information\u0026#34;, \u0026#34;System\u0026#34;: \u0026#34;Warning\u0026#34; } } } We need to make some changes in our Program.cs file both for logging in the terminal as well as pushing our logs to Elastic.\n// Program.cs public static IHostBuilder CreateHostBuilder(string[] args) { return Host.CreateDefaultBuilder(args) .UseSerilog((context, configuration) =\u0026gt; { configuration .Enrich.FromLogContext() .Enrich.WithMachineName() .WriteTo.Console() .WriteTo.Elasticsearch( new ElasticsearchSinkOptions(new Uri(context.Configuration[\u0026#34;ElasticConfig:url\u0026#34;])) { IndexFormat = $\u0026#34;{System.Reflection.Assembly.GetExecutingAssembly().GetName().Name}-\u0026#34; + $\u0026#34;{context.Configuration[\u0026#34;ASPNETCORE_ENVIRONMENT\u0026#34;].ToLower()}_{DateTime.UtcNow:yyyy-MM-dd}\u0026#34;, AutoRegisterTemplate = true }) .Enrich.WithProperty(\u0026#34;Environment\u0026#34;, context.HostingEnvironment.EnvironmentName) .ReadFrom.Configuration(context.Configuration); }) .ConfigureWebHostDefaults(webBuilder =\u0026gt; { webBuilder.UseStartup\u0026lt;Startup\u0026gt;(); }); } Most of this you can find online but for as a short explanation:\n We enrich our logs with the log context, machine name and the environment (dev/prod) We push our logs both to the console and to elastic The logs in elastic will have the format appname-dev/prod_date. Something to keep in mind for this is that it looks like some characters like : do not work in these patterns or at least didn\u0026rsquo;t work for me hence the underscore.  What\u0026rsquo;s cool about this is that we do not have to change our existing logger related code! We can also however use Serilog directly:\n Change the using Microsoft.Extensions.Logging; import to using Serilog; Remove the generic from the ILoggers Change _logger.LogError to _logger.Error  Another thing we can do is edit the Exception data and log some debugging critical parameter.\n// WeatherForecastController.cs if (rng.Next(0, 10) \u0026lt; 2) { var myException = new Exception(); myException.Data.Add(\u0026#34;someVeryImportantAttribute\u0026#34;, 42); throw myException; } // MyMiddleware.cs catch (Exception exception) { _logger.Error(exception, \u0026#34;Something went wrong, {message}\u0026#34;, exception.Data[\u0026#34;someVeryImportantAttribute\u0026#34;]); await HandleExceptionAsync(context, exception); } If we now run the app logs will start getting pushed to elastic (make sure to also make a few requests so you get some errors!).\nKibana We can now visit http://localhost:5601 to access kibana.\nOnce there, go to Spaces \u0026gt; Manage Spaces from the top right and select default. On the left you should see Index patterns and if you go there you can essentially define the log pattern that you want kibana to consider, in my case that is elk-development_*. We can then go to Analytics \u0026gt; Discover and voilà!\nIf you made the Exception data change mentioned earlier you should be able to see that as well\nThe true power of this comes from how you can query your logs. You could for example query for level: Error to get all your error logs\nYou could also make queries like fields.ElapsedMilliseconds \u0026gt; 10 or fields.RequestPath: /weatherforecast, you can read more about the possible queries here.\nOne thing I always love spending way too much time on is visualizations and I can definitely see this being the most powerful feature in Kibana\nConclusion Overall I think this was a pretty cool learning experience for me as I had never done proper error handling or used middleware before in C# (or used docker hardware limits but we do not talk about that). I think that although I definitely see the ELK stack being invaluable to a big company, I feel like I will not be using or recommend others to use if for small or personal projects as it is relatively hard to set up locally and expensive to host (especially if before this you just had a single app instance running).\nLong story short; it is definitely pretty cool but like normal logging should be enough for the majority of cases 👍.\nAnd of course by no means will implementing all of this compensate for bad error handling.\nThanks for reading!\nYou can find the code here.\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/cs_elk/","summary":"What is the ELK stack? With today\u0026rsquo;s applications growing in complexity rapidly, debugging and efficiently digesting logs have become crucial. That is the problem that the ELK stack is trying to solve.\nThe ELK stack consists of:\n Elasticsearch: A distributed search engine with highly refined analytics capabilities Logstash: A data-processing pipeline that collects data and delivers it to Elasticsearch Kibana: A visualization platform built expressly for Elasticsearch  These three together make for a great way of digesting aggregated logs from your application through visualisations.","title":"C# and the ELK stack"},{"content":"                                                      Load the weekly Data We load the tidytuesdayR along with tidyverse and ggthemr for plot themes.\nlibrary(tidytuesdayR) library(tidyverse) library(tidymodels) library(ggthemr) library(ggridges) library(lubridate) library(plotly) library(ranger) library(kernlab) tuesdata \u0026lt;- tidytuesdayR::tt_load(\u0026#39;2021-04-20\u0026#39;) netflix \u0026lt;- tuesdata$netflix ggthemr(\u0026#39;flat dark\u0026#39;, type = \u0026#39;outer\u0026#39;) Readme The link to the original readme file can be found here.\nThis data set contains Movies and TV Shows available on Netflix with information release date, rating, duration, genre and more. I want to mainly explore how both Movies and TV Shows changed over time in relation to different parameters.\nGlimpse Data We can start by getting an idea of the data\n# Check the `type` variable netflix %\u0026gt;% count(type) ## # A tibble: 2 × 2 ## type n ## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; ## 1 Movie 5377 ## 2 TV Show 2410  # See the amount of countries netflix %\u0026gt;% count(country) %\u0026gt;% nrow() ## [1] 682  # Check the date range netflix %\u0026gt;% summarise(min(release_year), max(release_year)) ## # A tibble: 1 × 2 ## `min(release_year)` `max(release_year)` ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 1925 2021  We can also make a few explanatory plots to get a better idea of the data.\n {\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"base\":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,1,2,0,2,1,3,1,2,4,1,2,3,4,4,7,4,4,6,9,9,12,13,13,23,34,37,39,61,65,90,159,240,268,387,414,457,19],\"x\":[1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,1,1,0,0,0,0,0,0,2,3,2,0,3,1,4,0,3,1,1,2,1,4,4,2,2,5,3,10,6,6,9,6,6,10,9,8,15,9,9,8,8,7,14,12,17,16,16,18,15,17,16,26,27,26,30,32,39,40,50,61,72,72,102,103,136,127,158,202,244,382,642,744,734,582,411,12],\"text\":[\"count: 0\nrelease_year: 1925\ntype: Movie\",\"count: 0\nrelease_year: 1926\ntype: Movie\",\"count: 0\nrelease_year: 1927\ntype: Movie\",\"count: 0\nrelease_year: 1928\ntype: Movie\",\"count: 0\nrelease_year: 1929\ntype: Movie\",\"count: 0\nrelease_year: 1930\ntype: Movie\",\"count: 0\nrelease_year: 1931\ntype: Movie\",\"count: 0\nrelease_year: 1932\ntype: Movie\",\"count: 0\nrelease_year: 1933\ntype: Movie\",\"count: 0\nrelease_year: 1934\ntype: Movie\",\"count: 0\nrelease_year: 1935\ntype: Movie\",\"count: 0\nrelease_year: 1936\ntype: Movie\",\"count: 0\nrelease_year: 1937\ntype: Movie\",\"count: 0\nrelease_year: 1938\ntype: Movie\",\"count: 0\nrelease_year: 1939\ntype: Movie\",\"count: 0\nrelease_year: 1940\ntype: Movie\",\"count: 0\nrelease_year: 1941\ntype: Movie\",\"count: 2\nrelease_year: 1942\ntype: Movie\",\"count: 3\nrelease_year: 1943\ntype: Movie\",\"count: 3\nrelease_year: 1944\ntype: Movie\",\"count: 3\nrelease_year: 1945\ntype: Movie\",\"count: 1\nrelease_year: 1946\ntype: Movie\",\"count: 1\nrelease_year: 1947\ntype: Movie\",\"count: 0\nrelease_year: 1948\ntype: Movie\",\"count: 0\nrelease_year: 1949\ntype: Movie\",\"count: 0\nrelease_year: 1950\ntype: Movie\",\"count: 0\nrelease_year: 1951\ntype: Movie\",\"count: 0\nrelease_year: 1952\ntype: Movie\",\"count: 0\nrelease_year: 1953\ntype: Movie\",\"count: 2\nrelease_year: 1954\ntype: Movie\",\"count: 3\nrelease_year: 1955\ntype: Movie\",\"count: 2\nrelease_year: 1956\ntype: Movie\",\"count: 0\nrelease_year: 1957\ntype: Movie\",\"count: 3\nrelease_year: 1958\ntype: Movie\",\"count: 1\nrelease_year: 1959\ntype: Movie\",\"count: 4\nrelease_year: 1960\ntype: Movie\",\"count: 0\nrelease_year: 1961\ntype: Movie\",\"count: 3\nrelease_year: 1962\ntype: Movie\",\"count: 1\nrelease_year: 1963\ntype: Movie\",\"count: 1\nrelease_year: 1964\ntype: Movie\",\"count: 2\nrelease_year: 1965\ntype: Movie\",\"count: 1\nrelease_year: 1966\ntype: Movie\",\"count: 4\nrelease_year: 1967\ntype: Movie\",\"count: 4\nrelease_year: 1968\ntype: Movie\",\"count: 2\nrelease_year: 1969\ntype: Movie\",\"count: 2\nrelease_year: 1970\ntype: Movie\",\"count: 5\nrelease_year: 1971\ntype: Movie\",\"count: 3\nrelease_year: 1972\ntype: Movie\",\"count: 10\nrelease_year: 1973\ntype: Movie\",\"count: 6\nrelease_year: 1974\ntype: Movie\",\"count: 6\nrelease_year: 1975\ntype: Movie\",\"count: 9\nrelease_year: 1976\ntype: Movie\",\"count: 6\nrelease_year: 1977\ntype: Movie\",\"count: 6\nrelease_year: 1978\ntype: Movie\",\"count: 10\nrelease_year: 1979\ntype: Movie\",\"count: 9\nrelease_year: 1980\ntype: Movie\",\"count: 8\nrelease_year: 1981\ntype: Movie\",\"count: 15\nrelease_year: 1982\ntype: Movie\",\"count: 9\nrelease_year: 1983\ntype: Movie\",\"count: 9\nrelease_year: 1984\ntype: Movie\",\"count: 8\nrelease_year: 1985\ntype: Movie\",\"count: 8\nrelease_year: 1986\ntype: Movie\",\"count: 7\nrelease_year: 1987\ntype: Movie\",\"count: 14\nrelease_year: 1988\ntype: Movie\",\"count: 12\nrelease_year: 1989\ntype: Movie\",\"count: 17\nrelease_year: 1990\ntype: Movie\",\"count: 16\nrelease_year: 1991\ntype: Movie\",\"count: 16\nrelease_year: 1992\ntype: Movie\",\"count: 18\nrelease_year: 1993\ntype: Movie\",\"count: 15\nrelease_year: 1994\ntype: Movie\",\"count: 17\nrelease_year: 1995\ntype: Movie\",\"count: 16\nrelease_year: 1996\ntype: Movie\",\"count: 26\nrelease_year: 1997\ntype: Movie\",\"count: 27\nrelease_year: 1998\ntype: Movie\",\"count: 26\nrelease_year: 1999\ntype: Movie\",\"count: 30\nrelease_year: 2000\ntype: Movie\",\"count: 32\nrelease_year: 2001\ntype: Movie\",\"count: 39\nrelease_year: 2002\ntype: Movie\",\"count: 40\nrelease_year: 2003\ntype: Movie\",\"count: 50\nrelease_year: 2004\ntype: Movie\",\"count: 61\nrelease_year: 2005\ntype: Movie\",\"count: 72\nrelease_year: 2006\ntype: Movie\",\"count: 72\nrelease_year: 2007\ntype: Movie\",\"count: 102\nrelease_year: 2008\ntype: Movie\",\"count: 103\nrelease_year: 2009\ntype: Movie\",\"count: 136\nrelease_year: 2010\ntype: Movie\",\"count: 127\nrelease_year: 2011\ntype: Movie\",\"count: 158\nrelease_year: 2012\ntype: Movie\",\"count: 202\nrelease_year: 2013\ntype: Movie\",\"count: 244\nrelease_year: 2014\ntype: Movie\",\"count: 382\nrelease_year: 2015\ntype: Movie\",\"count: 642\nrelease_year: 2016\ntype: Movie\",\"count: 744\nrelease_year: 2017\ntype: Movie\",\"count: 734\nrelease_year: 2018\ntype: Movie\",\"count: 582\nrelease_year: 2019\ntype: Movie\",\"count: 411\nrelease_year: 2020\ntype: Movie\",\"count: 12\nrelease_year: 2021\ntype: Movie\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"Movie\",\"legendgroup\":\"Movie\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,1,2,0,2,1,3,1,2,4,1,2,3,4,4,7,4,4,6,9,9,12,13,13,23,34,37,39,61,65,90,159,240,268,387,414,457,19],\"text\":[\"count: 1\nrelease_year: 1925\ntype: TV Show\",\"count: 0\nrelease_year: 1926\ntype: TV Show\",\"count: 0\nrelease_year: 1927\ntype: TV Show\",\"count: 0\nrelease_year: 1928\ntype: TV Show\",\"count: 0\nrelease_year: 1929\ntype: TV Show\",\"count: 0\nrelease_year: 1930\ntype: TV Show\",\"count: 0\nrelease_year: 1931\ntype: TV Show\",\"count: 0\nrelease_year: 1932\ntype: TV Show\",\"count: 0\nrelease_year: 1933\ntype: TV Show\",\"count: 0\nrelease_year: 1934\ntype: TV Show\",\"count: 0\nrelease_year: 1935\ntype: TV Show\",\"count: 0\nrelease_year: 1936\ntype: TV Show\",\"count: 0\nrelease_year: 1937\ntype: TV Show\",\"count: 0\nrelease_year: 1938\ntype: TV Show\",\"count: 0\nrelease_year: 1939\ntype: TV Show\",\"count: 0\nrelease_year: 1940\ntype: TV Show\",\"count: 0\nrelease_year: 1941\ntype: TV Show\",\"count: 0\nrelease_year: 1942\ntype: TV Show\",\"count: 0\nrelease_year: 1943\ntype: TV Show\",\"count: 0\nrelease_year: 1944\ntype: TV Show\",\"count: 0\nrelease_year: 1945\ntype: TV Show\",\"count: 1\nrelease_year: 1946\ntype: TV Show\",\"count: 0\nrelease_year: 1947\ntype: TV Show\",\"count: 0\nrelease_year: 1948\ntype: TV Show\",\"count: 0\nrelease_year: 1949\ntype: TV Show\",\"count: 0\nrelease_year: 1950\ntype: TV Show\",\"count: 0\nrelease_year: 1951\ntype: TV Show\",\"count: 0\nrelease_year: 1952\ntype: TV Show\",\"count: 0\nrelease_year: 1953\ntype: TV Show\",\"count: 0\nrelease_year: 1954\ntype: TV Show\",\"count: 0\nrelease_year: 1955\ntype: TV Show\",\"count: 0\nrelease_year: 1956\ntype: TV Show\",\"count: 0\nrelease_year: 1957\ntype: TV Show\",\"count: 0\nrelease_year: 1958\ntype: TV Show\",\"count: 0\nrelease_year: 1959\ntype: TV Show\",\"count: 0\nrelease_year: 1960\ntype: TV Show\",\"count: 0\nrelease_year: 1961\ntype: TV Show\",\"count: 0\nrelease_year: 1962\ntype: TV Show\",\"count: 1\nrelease_year: 1963\ntype: TV Show\",\"count: 0\nrelease_year: 1964\ntype: TV Show\",\"count: 0\nrelease_year: 1965\ntype: TV Show\",\"count: 0\nrelease_year: 1966\ntype: TV Show\",\"count: 1\nrelease_year: 1967\ntype: TV Show\",\"count: 1\nrelease_year: 1968\ntype: TV Show\",\"count: 0\nrelease_year: 1969\ntype: TV Show\",\"count: 0\nrelease_year: 1970\ntype: TV Show\",\"count: 0\nrelease_year: 1971\ntype: TV Show\",\"count: 1\nrelease_year: 1972\ntype: TV Show\",\"count: 0\nrelease_year: 1973\ntype: TV Show\",\"count: 1\nrelease_year: 1974\ntype: TV Show\",\"count: 0\nrelease_year: 1975\ntype: TV Show\",\"count: 0\nrelease_year: 1976\ntype: TV Show\",\"count: 1\nrelease_year: 1977\ntype: TV Show\",\"count: 0\nrelease_year: 1978\ntype: TV Show\",\"count: 1\nrelease_year: 1979\ntype: TV Show\",\"count: 0\nrelease_year: 1980\ntype: TV Show\",\"count: 1\nrelease_year: 1981\ntype: TV Show\",\"count: 0\nrelease_year: 1982\ntype: TV Show\",\"count: 0\nrelease_year: 1983\ntype: TV Show\",\"count: 0\nrelease_year: 1984\ntype: TV Show\",\"count: 1\nrelease_year: 1985\ntype: TV Show\",\"count: 2\nrelease_year: 1986\ntype: TV Show\",\"count: 0\nrelease_year: 1987\ntype: TV Show\",\"count: 2\nrelease_year: 1988\ntype: TV Show\",\"count: 1\nrelease_year: 1989\ntype: TV Show\",\"count: 3\nrelease_year: 1990\ntype: TV Show\",\"count: 1\nrelease_year: 1991\ntype: TV Show\",\"count: 2\nrelease_year: 1992\ntype: TV Show\",\"count: 4\nrelease_year: 1993\ntype: TV Show\",\"count: 1\nrelease_year: 1994\ntype: TV Show\",\"count: 2\nrelease_year: 1995\ntype: TV Show\",\"count: 3\nrelease_year: 1996\ntype: TV Show\",\"count: 4\nrelease_year: 1997\ntype: TV Show\",\"count: 4\nrelease_year: 1998\ntype: TV Show\",\"count: 7\nrelease_year: 1999\ntype: TV Show\",\"count: 4\nrelease_year: 2000\ntype: TV Show\",\"count: 4\nrelease_year: 2001\ntype: TV Show\",\"count: 6\nrelease_year: 2002\ntype: TV Show\",\"count: 9\nrelease_year: 2003\ntype: TV Show\",\"count: 9\nrelease_year: 2004\ntype: TV Show\",\"count: 12\nrelease_year: 2005\ntype: TV Show\",\"count: 13\nrelease_year: 2006\ntype: TV Show\",\"count: 13\nrelease_year: 2007\ntype: TV Show\",\"count: 23\nrelease_year: 2008\ntype: TV Show\",\"count: 34\nrelease_year: 2009\ntype: TV Show\",\"count: 37\nrelease_year: 2010\ntype: TV Show\",\"count: 39\nrelease_year: 2011\ntype: TV Show\",\"count: 61\nrelease_year: 2012\ntype: TV Show\",\"count: 65\nrelease_year: 2013\ntype: TV Show\",\"count: 90\nrelease_year: 2014\ntype: TV Show\",\"count: 159\nrelease_year: 2015\ntype: TV Show\",\"count: 240\nrelease_year: 2016\ntype: TV Show\",\"count: 268\nrelease_year: 2017\ntype: TV Show\",\"count: 387\nrelease_year: 2018\ntype: TV Show\",\"count: 414\nrelease_year: 2019\ntype: TV Show\",\"count: 457\nrelease_year: 2020\ntype: TV Show\",\"count: 19\nrelease_year: 2021\ntype: TV Show\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(46,204,113,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"TV Show\",\"legendgroup\":\"TV Show\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":47.0236612702366},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1919.65,2026.35],\"tickmode\":\"array\",\"ticktext\":[\"1925\",\"1950\",\"1975\",\"2000\",\"2025\"],\"tickvals\":[1925,1950,1975,2000,2025],\"categoryorder\":\"array\",\"categoryarray\":[\"1925\",\"1950\",\"1975\",\"2000\",\"2025\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Release Year\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-56.05,1177.05],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"300\",\"600\",\"900\"],\"tickvals\":[0,300,600,900],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"300\",\"600\",\"900\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Frequency\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"title\":{\"text\":\"type\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a69228a2d\":{\"x\":{},\"fill\":{},\"type\":\"bar\"}},\"cur_data\":\"b5a69228a2d\",\"visdat\":{\"b5a69228a2d\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nFrom the plot above we can see that although movies greatly outnumber TV Shows as of now, they have drastically slowed down their increase and even started decreasing by 2020 unlike TV Shows that are still growing exponentially in the last 5 years. It is worth noting that this dataset was mined before the end of 2020 which means that the values from that year may be underrepresented. Despite that however, the above observation still holds as we can very clearly see a steady decline in the addition of new movies that begins at 2018.\n\n {\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[1925,1927.5,1930,1932.5,1935,1937.5,1940,1942.5,1945,1947.5,1950,1952.5,1955,1957.5,1960,1962.5,1965,1967.5,1970,1972.5,1975,1977.5,1980,1982.5,1985,1987.5,1990,1992.5,1995,1997.5,2000,2002.5,2005,2007.5,2010,2012.5,2015,2017.5,2020],\"y\":[0,0,0,0,0,0,0,5,7,1,0,0,7,3,5,4,4,8,9,13,21,12,27,24,25,21,45,34,48,53,88,79,183,174,366,360,1268,1478,1005],\"text\":[\"count: 0\nrelease_year: 1925.0\ntype: Movie\",\"count: 0\nrelease_year: 1927.5\ntype: Movie\",\"count: 0\nrelease_year: 1930.0\ntype: Movie\",\"count: 0\nrelease_year: 1932.5\ntype: Movie\",\"count: 0\nrelease_year: 1935.0\ntype: Movie\",\"count: 0\nrelease_year: 1937.5\ntype: Movie\",\"count: 0\nrelease_year: 1940.0\ntype: Movie\",\"count: 5\nrelease_year: 1942.5\ntype: Movie\",\"count: 7\nrelease_year: 1945.0\ntype: Movie\",\"count: 1\nrelease_year: 1947.5\ntype: Movie\",\"count: 0\nrelease_year: 1950.0\ntype: Movie\",\"count: 0\nrelease_year: 1952.5\ntype: Movie\",\"count: 7\nrelease_year: 1955.0\ntype: Movie\",\"count: 3\nrelease_year: 1957.5\ntype: Movie\",\"count: 5\nrelease_year: 1960.0\ntype: Movie\",\"count: 4\nrelease_year: 1962.5\ntype: Movie\",\"count: 4\nrelease_year: 1965.0\ntype: Movie\",\"count: 8\nrelease_year: 1967.5\ntype: Movie\",\"count: 9\nrelease_year: 1970.0\ntype: Movie\",\"count: 13\nrelease_year: 1972.5\ntype: Movie\",\"count: 21\nrelease_year: 1975.0\ntype: Movie\",\"count: 12\nrelease_year: 1977.5\ntype: Movie\",\"count: 27\nrelease_year: 1980.0\ntype: Movie\",\"count: 24\nrelease_year: 1982.5\ntype: Movie\",\"count: 25\nrelease_year: 1985.0\ntype: Movie\",\"count: 21\nrelease_year: 1987.5\ntype: Movie\",\"count: 45\nrelease_year: 1990.0\ntype: Movie\",\"count: 34\nrelease_year: 1992.5\ntype: Movie\",\"count: 48\nrelease_year: 1995.0\ntype: Movie\",\"count: 53\nrelease_year: 1997.5\ntype: Movie\",\"count: 88\nrelease_year: 2000.0\ntype: Movie\",\"count: 79\nrelease_year: 2002.5\ntype: Movie\",\"count: 183\nrelease_year: 2005.0\ntype: Movie\",\"count: 174\nrelease_year: 2007.5\ntype: Movie\",\"count: 366\nrelease_year: 2010.0\ntype: Movie\",\"count: 360\nrelease_year: 2012.5\ntype: Movie\",\"count: 1268\nrelease_year: 2015.0\ntype: Movie\",\"count: 1478\nrelease_year: 2017.5\ntype: Movie\",\"count: 1005\nrelease_year: 2020.0\ntype: Movie\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"Movie\",\"legendgroup\":\"Movie\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[1925,1927.5,1930,1932.5,1935,1937.5,1940,1942.5,1945,1947.5,1950,1952.5,1955,1957.5,1960,1962.5,1965,1967.5,1970,1972.5,1975,1977.5,1980,1982.5,1985,1987.5,1990,1992.5,1995,1997.5,2000,2002.5,2005,2007.5,2010,2012.5,2015,2017.5,2020],\"y\":[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,2,0,1,1,1,2,0,3,2,5,6,6,8,15,15,34,36,110,126,489,655,890],\"text\":[\"count: 1\nrelease_year: 1925.0\ntype: TV Show\",\"count: 0\nrelease_year: 1927.5\ntype: TV Show\",\"count: 0\nrelease_year: 1930.0\ntype: TV Show\",\"count: 0\nrelease_year: 1932.5\ntype: TV Show\",\"count: 0\nrelease_year: 1935.0\ntype: TV Show\",\"count: 0\nrelease_year: 1937.5\ntype: TV Show\",\"count: 0\nrelease_year: 1940.0\ntype: TV Show\",\"count: 0\nrelease_year: 1942.5\ntype: TV Show\",\"count: 1\nrelease_year: 1945.0\ntype: TV Show\",\"count: 0\nrelease_year: 1947.5\ntype: TV Show\",\"count: 0\nrelease_year: 1950.0\ntype: TV Show\",\"count: 0\nrelease_year: 1952.5\ntype: TV Show\",\"count: 0\nrelease_year: 1955.0\ntype: TV Show\",\"count: 0\nrelease_year: 1957.5\ntype: TV Show\",\"count: 0\nrelease_year: 1960.0\ntype: TV Show\",\"count: 1\nrelease_year: 1962.5\ntype: TV Show\",\"count: 0\nrelease_year: 1965.0\ntype: TV Show\",\"count: 2\nrelease_year: 1967.5\ntype: TV Show\",\"count: 0\nrelease_year: 1970.0\ntype: TV Show\",\"count: 1\nrelease_year: 1972.5\ntype: TV Show\",\"count: 1\nrelease_year: 1975.0\ntype: TV Show\",\"count: 1\nrelease_year: 1977.5\ntype: TV Show\",\"count: 2\nrelease_year: 1980.0\ntype: TV Show\",\"count: 0\nrelease_year: 1982.5\ntype: TV Show\",\"count: 3\nrelease_year: 1985.0\ntype: TV Show\",\"count: 2\nrelease_year: 1987.5\ntype: TV Show\",\"count: 5\nrelease_year: 1990.0\ntype: TV Show\",\"count: 6\nrelease_year: 1992.5\ntype: TV Show\",\"count: 6\nrelease_year: 1995.0\ntype: TV Show\",\"count: 8\nrelease_year: 1997.5\ntype: TV Show\",\"count: 15\nrelease_year: 2000.0\ntype: TV Show\",\"count: 15\nrelease_year: 2002.5\ntype: TV Show\",\"count: 34\nrelease_year: 2005.0\ntype: TV Show\",\"count: 36\nrelease_year: 2007.5\ntype: TV Show\",\"count: 110\nrelease_year: 2010.0\ntype: TV Show\",\"count: 126\nrelease_year: 2012.5\ntype: TV Show\",\"count: 489\nrelease_year: 2015.0\ntype: TV Show\",\"count: 655\nrelease_year: 2017.5\ntype: TV Show\",\"count: 890\nrelease_year: 2020.0\ntype: TV Show\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(46,204,113,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"TV Show\",\"legendgroup\":\"TV Show\",\"showlegend\":true,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":27.8953922789539,\"l\":37.4595267745953},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,0.449198442349127],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1918.875,2026.125],\"tickmode\":\"array\",\"ticktext\":[\"1925\",\"1950\",\"1975\",\"2000\",\"2025\"],\"tickvals\":[1925,1950,1975,2000,2025],\"categoryorder\":\"array\",\"categoryarray\":[\"1925\",\"1950\",\"1975\",\"2000\",\"2025\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-73.9,1551.9],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"500\",\"1000\",\"1500\"],\"tickvals\":[0,500,1000,1500],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"500\",\"1000\",\"1500\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.449198442349127,\"y0\":0,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.550801557650873,\"x1\":1,\"y0\":0,\"y1\":1}],\"xaxis2\":{\"type\":\"linear\",\"autorange\":false,\"range\":[1918.875,2026.125],\"tickmode\":\"array\",\"ticktext\":[\"1925\",\"1950\",\"1975\",\"2000\",\"2025\"],\"tickvals\":[1925,1950,1975,2000,2025],\"categoryorder\":\"array\",\"categoryarray\":[\"1925\",\"1950\",\"1975\",\"2000\",\"2025\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"domain\":[0.550801557650873,1],\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis2\":{\"type\":\"linear\",\"autorange\":false,\"range\":[-44.5,934.5],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"250\",\"500\",\"750\"],\"tickvals\":[0,250,500,750],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"250\",\"500\",\"750\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"domain\":[0,1],\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"title\":{\"text\":\"type\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a722e22d3\":{\"x\":{},\"fill\":{},\"type\":\"bar\"}},\"cur_data\":\"b5a722e22d3\",\"visdat\":{\"b5a722e22d3\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nHere we can see another comparison of Movies and TV Shows side by side, binned at 5 years.\n\n {\"x\":{\"data\":[{\"x\":[1940,1945,1950,1955,1960,1965,1970,1975,1980,1985,1990,1995,2000,2005,2010,2015,2020],\"y\":[0.00148781848614469,0.000929886553840432,0.000371954621536173,0.00167379579691278,0.00167379579691278,0.00241770503998512,0.00483541007997024,0.00688116049841919,0.00929886553840431,0.00911288822763623,0.0152501394829831,0.0208294588060257,0.0355216663567045,0.0762506974149154,0.161242328435931,0.573554026408778,0.0786684024549005],\"text\":[\"five_years: 1940\npercent: 0.0014878185\ntype: Movie\",\"five_years: 1945\npercent: 0.0009298866\ntype: Movie\",\"five_years: 1950\npercent: 0.0003719546\ntype: Movie\",\"five_years: 1955\npercent: 0.0016737958\ntype: Movie\",\"five_years: 1960\npercent: 0.0016737958\ntype: Movie\",\"five_years: 1965\npercent: 0.0024177050\ntype: Movie\",\"five_years: 1970\npercent: 0.0048354101\ntype: Movie\",\"five_years: 1975\npercent: 0.0068811605\ntype: Movie\",\"five_years: 1980\npercent: 0.0092988655\ntype: Movie\",\"five_years: 1985\npercent: 0.0091128882\ntype: Movie\",\"five_years: 1990\npercent: 0.0152501395\ntype: Movie\",\"five_years: 1995\npercent: 0.0208294588\ntype: Movie\",\"five_years: 2000\npercent: 0.0355216664\ntype: Movie\",\"five_years: 2005\npercent: 0.0762506974\ntype: Movie\",\"five_years: 2010\npercent: 0.1612423284\ntype: Movie\",\"five_years: 2015\npercent: 0.5735540264\ntype: Movie\",\"five_years: 2020\npercent: 0.0786684025\ntype: Movie\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(52,152,219,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Movie\",\"legendgroup\":\"Movie\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1925,1945,1960,1965,1970,1975,1980,1985,1990,1995,2000,2005,2010,2015,2020],\"y\":[0.0004149377593361,0.0004149377593361,0.0004149377593361,0.000829875518672199,0.000829875518672199,0.000829875518672199,0.0004149377593361,0.0024896265560166,0.0045643153526971,0.00829875518672199,0.0132780082987552,0.0394190871369295,0.121161825726141,0.609128630705394,0.197510373443983],\"text\":[\"five_years: 1925\npercent: 0.0004149378\ntype: TV Show\",\"five_years: 1945\npercent: 0.0004149378\ntype: TV Show\",\"five_years: 1960\npercent: 0.0004149378\ntype: TV Show\",\"five_years: 1965\npercent: 0.0008298755\ntype: TV Show\",\"five_years: 1970\npercent: 0.0008298755\ntype: TV Show\",\"five_years: 1975\npercent: 0.0008298755\ntype: TV Show\",\"five_years: 1980\npercent: 0.0004149378\ntype: TV Show\",\"five_years: 1985\npercent: 0.0024896266\ntype: TV Show\",\"five_years: 1990\npercent: 0.0045643154\ntype: TV Show\",\"five_years: 1995\npercent: 0.0082987552\ntype: TV Show\",\"five_years: 2000\npercent: 0.0132780083\ntype: TV Show\",\"five_years: 2005\npercent: 0.0394190871\ntype: TV Show\",\"five_years: 2010\npercent: 0.1211618257\ntype: TV Show\",\"five_years: 2015\npercent: 0.6091286307\ntype: TV Show\",\"five_years: 2020\npercent: 0.1975103734\ntype: TV Show\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(46,204,113,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"TV Show\",\"legendgroup\":\"TV Show\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":47.0236612702366},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1920.25,2024.75],\"tickmode\":\"array\",\"ticktext\":[\"1925\",\"1950\",\"1975\",\"2000\"],\"tickvals\":[1925,1950,1975,2000],\"categoryorder\":\"array\",\"categoryarray\":[\"1925\",\"1950\",\"1975\",\"2000\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Release Year\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.0300658791826567,0.639566464509587],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.2\",\"0.4\",\"0.6\"],\"tickvals\":[0,0.2,0.4,0.6],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.2\",\"0.4\",\"0.6\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Percentage\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"title\":{\"text\":\"type\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a6c1027d\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"b5a6c1027d\",\"visdat\":{\"b5a6c1027d\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nHere we can see the rate of change more clearly.\nWrangle I noticed that the duration was a text field instead of a numerical one so I decided to split that to 2 fields; duration and duration_unit so as to be able to make some plots on it. I also converted the date_added variable from a string to the year it’s referring to for the same reason. I also created a new variable duration_hours which is duration divided by 60, this only makes sense for Movies of course. Lastly I dropped any entries with Null columns.\n\nLet’s make some more plots!\nMovie Duration over the Years \nI think this showcases the shift in the duration of movies over the years very nicely; we can see that movies that are under an hour only got released almost exclusively after the year 2000. The more “standard” movie duration of 2-3 hours is similar but we can see that it started picking up traction a bit before 1-hour movies. Lastly we can see that really long movies (3 hours or 4 especially) were a lot more common before the 2000s. If we also account for the fact that more movies were produced after the 2000s (from this data set) we could say that long movies have been in decline in recent years.\nAnother great way to show the decline in duration is this plot which tells the same story and also shows the few outliars from recent years.\n {\"x\":{\"data\":[{\"x\":[2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2015,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2010,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,2005,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,1995,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1985,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1975,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1970,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1990,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1980,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1965,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1960,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1955,1945,1945,1945,1945,1945,1945,1940,1940,1940,1940,1950,1950,1950,1950,1950,1950,1950],\"y\":[93,93,97,112,112,92,92,90,90,90,95,95,89,118,118,106,106,106,103,103,89,89,89,91,91,91,91,98,99,99,144,144,124,124,124,110,110,110,128,128,128,128,117,117,100,100,146,146,146,95,95,102,102,102,111,111,86,99,105,105,72,117,117,119,119,119,81,81,97,97,106,106,131,131,131,105,91,88,91,91,63,83,105,105,105,87,87,87,96,96,96,96,91,109,109,109,124,101,101,149,90,90,90,90,90,90,96,96,104,104,104,89,89,125,136,93,114,114,135,130,130,90,90,90,94,94,91,96,96,102,102,90,90,90,95,95,119,119,103,101,101,101,101,101,93,93,140,140,140,140,124,124,124,82,82,82,82,70,95,97,97,97,92,92,124,124,124,102,83,83,93,93,91,91,102,86,86,135,86,86,105,105,105,95,93,93,81,84,84,84,105,105,105,86,86,120,120,120,97,97,97,96,96,123,94,168,105,105,109,109,109,94,77,96,96,75,75,94,94,94,94,129,129,129,80,80,80,66,87,87,96,96,96,77,77,137,137,137,137,72,73,73,123,123,123,123,121,121,121,139,139,139,92,92,111,104,99,99,103,104,104,104,94,94,94,86,104,104,104,100,92,90,90,90,94,94,94,118,101,93,93,92,92,92,92,85,85,85,85,93,93,93,93,22,141,141,141,86,86,86,86,86,129,110,110,110,110,110,88,88,88,88,111,111,110,29,142,142,142,142,142,168,168,102,92,92,97,97,97,97,59,88,110,80,80,109,109,109,59,97,100,100,92,92,89,89,96,95,95,128,132,132,132,88,58,97,97,97,108,108,108,101,98,69,111,111,111,114,111,111,92,92,98,98,98,102,102,102,86,86,130,130,94,94,96,108,108,130,130,130,103,103,103,132,132,132,108,130,130,107,62,62,96,96,96,89,89,88,26,26,26,156,156,156,98,98,97,107,107,99,99,130,96,122,122,84,84,84,57,57,57,102,102,98,98,101,93,118,89,89,85,85,104,91,91,110,110,111,111,111,77,99,99,99,99,99,100,78,125,150,150,91,47,47,47,116,116,116,106,106,106,122,122,122,124,113,133,133,133,102,94,94,127,127,127,109,109,109,116,116,110,110,110,127,127,127,146,146,146,146,90,90,88,88,131,131,131,131,87,94,71,71,121,121,121,121,77,90,90,89,89,89,86,53,54,88,88,53,60,60,60,60,111,111,111,111,111,103,129,129,87,87,87,87,87,106,106,59,74,105,101,101,101,101,63,91,91,91,96,96,96,96,99,99,99,92,92,92,92,86,90,90,90,88,106,106,121,121,94,100,101,101,91,91,92,22,115,115,60,90,90,90,75,75,75,115,115,87,71,62,127,127,127,90,90,90,101,158,158,158,158,95,95,96,96,102,102,102,90,105,105,99,99,128,128,128,98,161,54,83,83,85,85,85,106,106,102,102,102,102,88,88,88,122,100,100,100,80,80,80,57,57,79,69,69,69,106,106,106,115,115,115,115,60,64,110,110,110,114,106,106,106,78,78,78,67,87,87,87,63,88,88,88,88,126,126,90,90,90,90,90,79,79,79,101,101,101,106,90,92,57,57,96,93,91,83,83,92,92,92,84,84,104,104,104,97,97,94,100,100,88,76,76,90,90,90,84,84,84,116,90,90,95,95,97,97,97,103,103,103,103,129,129,111,111,111,139,91,91,91,98,98,112,112,65,95,95,95,104,104,104,92,92,92,108,79,79,95,95,95,96,96,96,44,81,112,112,138,53,53,99,110,110,78,78,163,163,55,55,92,92,103,91,90,106,127,127,122,113,113,113,128,128,128,128,61,57,93,93,100,100,100,79,79,96,93,93,93,96,67,117,108,108,111,128,71,71,97,97,97,91,91,83,90,89,89,89,104,116,116,116,107,105,111,111,111,113,113,113,86,86,102,102,102,129,129,98,98,98,163,137,137,137,126,95,95,89,97,97,89,89,90,90,128,128,128,128,119,119,121,121,30,30,143,143,87,91,104,104,104,157,157,15,15,15,15,86,102,102,130,130,130,130,130,88,88,92,87,117,117,64,65,118,118,84,84,63,92,92,100,100,100,100,72,72,72,118,118,118,118,118,110,110,64,59,81,81,81,90,90,90,87,87,110,110,110,86,104,129,129,129,130,130,130,107,107,107,107,80,80,80,80,80,79,79,62,93,93,93,81,81,81,87,87,87,89,89,89,97,97,95,182,108,108,102,102,89,89,89,89,63,105,105,105,170,170,125,125,125,106,106,126,126,128,128,90,90,90,123,123,123,123,86,86,94,94,83,106,106,92,92,94,94,94,94,100,100,95,95,133,133,133,133,81,81,91,91,91,106,106,106,87,84,81,81,100,90,88,88,88,92,99,99,117,130,130,124,124,124,95,95,95,97,97,97,81,81,131,83,116,116,133,73,73,73,88,88,150,150,150,150,97,97,97,97,91,91,91,92,111,111,111,111,106,111,85,111,97,89,89,129,129,129,58,88,65,84,84,89,126,126,135,135,135,127,127,127,165,165,165,165,159,159,159,159,136,136,98,77,101,101,112,180,127,127,127,98,98,98,95,95,95,86,86,86,111,111,91,104,86,124,124,102,102,102,97,97,97,90,90,101,101,101,101,164,164,99,99,99,130,130,130,140,83,140,83,83,105,105,105,130,130,117,117,117,82,97,97,124,106,84,84,66,149,103,103,103,108,108,82,82,82,94,94,94,95,95,95,95,114,114,114,114,99,99,99,134,134,134,94,89,89,89,93,122,122,122,117,117,88,88,88,91,97,64,64,87,87,74,74,83,83,91,91,81,81,79,79,88,88,24,145,75,75,100,96,72,72,109,109,132,132,132,110,110,110,99,99,99,120,106,110,110,110,105,94,91,91,91,91,121,121,108,108,118,118,118,87,87,87,77,77,98,98,98,94,94,94,94,94,78,84,140,29,29,102,102,102,105,99,99,99,97,97,97,110,88,88,88,116,96,137,137,51,51,51,51,110,110,110,110,92,92,119,119,119,119,103,103,103,89,89,89,99,99,99,116,116,116,116,102,102,129,129,98,98,97,97,97,86,86,100,20,100,100,115,115,115,99,99,99,119,119,106,118,88,118,126,116,127,127,90,90,74,74,74,91,91,91,27,27,90,90,90,90,87,87,87,90,90,98,98,108,94,94,99,122,122,122,122,122,122,116,116,96,82,96,96,153,153,153,153,126,126,126,126,86,86,106,70,104,155,28,28,64,100,100,104,56,108,108,108,83,91,107,86,86,80,95,95,95,101,101,73,81,75,107,107,107,107,120,120,120,91,93,93,116,116,112,112,87,87,130,113,113,74,74,74,150,150,150,150,88,95,95,95,105,105,105,105,105,105,123,123,123,95,107,107,98,97,77,77,76,107,107,107,107,106,106,106,106,87,102,87,86,118,126,126,130,130,94,92,92,90,95,95,98,98,98,87,84,84,121,95,95,95,92,31,59,86,100,112,67,78,91,91,91,84,84,97,84,105,105,105,93,66,118,66,127,127,131,131,131,107,107,107,107,92,124,124,124,115,115,115,88,88,88,97,97,97,116,62,56,116,94,44,92,92,92,90,137,137,137,100,100,100,100,79,155,155,155,155,110,135,135,135,135,92,92,92,114,114,114,114,88,88,132,132,91,91,91,107,107,103,90,106,106,106,106,129,129,129,129,93,127,127,127,103,90,90,90,91,91,120,120,83,83,83,91,91,91,91,119,119,119,119,91,91,67,67,103,109,85,85,85,88,174,88,75,80,80,113,113,113,53,84,84,86,86,93,93,81,81,81,154,74,115,115,115,128,101,101,101,120,120,100,60,60,60,87,97,47,47,99,135,92,92,109,81,81,94,100,100,99,103,91,131,131,131,101,101,161,111,111,111,92,92,92,92,90,93,73,98,108,141,89,89,89,108,108,108,65,131,86,89,88,88,126,126,126,126,97,97,101,101,101,101,135,135,135,96,96,94,96,96,96,89,89,86,86,74,74,90,84,70,137,137,137,93,94,84,84,84,145,145,94,94,86,86,105,105,107,90,63,96,97,96,89,89,89,90,90,90,38,110,96,96,96,92,92,94,94,96,96,96,23,109,109,109,90,90,106,81,81,81,113,113,116,116,61,100,139,139,130,130,94,94,94,118,118,118,118,100,100,100,95,95,91,97,97,97,110,110,110,148,148,120,120,120,155,155,155,155,91,91,91,90,90,90,90,90,90,129,129,103,103,127,127,127,14,95,95,95,103,103,103,97,97,95,95,95,94,94,80,80,105,98,98,41,41,104,104,104,148,148,148,78,102,102,94,94,94,98,98,78,78,138,110,128,128,124,118,101,122,122,110,110,110,104,104,127,135,135,118,118,94,94,114,114,114,98,98,102,81,80,65,133,78,78,78,71,100,100,125,125,125,102,126,101,101,101,93,93,95,95,95,105,105,105,105,104,104,104,104,104,104,96,150,63,63,120,120,120,90,90,101,93,93,93,93,104,104,104,82,82,126,126,126,92,74,95,104,104,104,92,92,142,142,142,124,124,110,110,90,83,83,67,63,108,108,119,119,119,95,95,90,98,98,102,102,102,90,90,102,82,100,100,100,100,100,53,53,100,100,100,87,87,106,117,117,117,96,96,85,128,87,77,77,77,77,60,107,107,110,110,110,110,103,103,103,103,103,81,81,105,182,88,88,88,111,111,157,81,81,118,118,118,132,89,89,107,107,107,117,117,117,93,93,93,103,107,84,84,84,95,86,86,86,106,121,121,121,121,91,107,98,98,98,104,104,104,104,104,104,105,105,102,102,102,109,56,107,107,95,95,95,106,106,124,129,129,129,129,99,100,100,105,105,116,116,116,96,12,12,105,105,114,114,93,93,122,89,96,112,112,113,113,126,126,94,98,98,98,95,95,112,101,101,101,103,111,111,111,107,107,107,72,106,98,98,91,97,127,127,127,90,115,115,101,101,101,80,80,80,84,66,52,65,92,89,119,119,119,59,119,119,87,87,87,88,88,87,87,87,33,88,88,88,88,105,105,105,101,86,86,86,86,86,86,91,104,104,131,131,104,104,104,104,86,86,86,127,127,92,92,92,92,118,118,87,87,83,130,130,130,130,140,140,140,86,86,86,86,86,86,107,107,115,115,100,106,106,151,98,97,87,110,110,110,102,102,88,88,88,121,121,121,96,96,89,89,89,103,84,84,84,147,147,147,104,104,124,124,124,112,112,132,132,132,123,83,108,108,108,108,108,103,134,134,90,68,68,112,112,61,78,78,51,25,25,57,98,98,98,98,22,94,109,109,109,91,120,120,120,98,98,98,98,98,98,93,135,135,120,62,56,118,118,118,110,110,110,93,97,112,112,105,105,105,105,117,117,117,117,97,93,107,91,84,84,80,80,110,97,95,84,90,90,131,140,105,121,121,121,91,104,104,94,100,100,100,116,88,54,96,96,88,115,85,109,12,12,12,12,88,88,103,103,103,88,88,88,75,75,75,75,75,89,97,67,111,124,99,95,95,114,114,114,107,107,107,110,110,110,20,97,97,80,80,80,67,81,81,153,112,112,149,101,101,101,95,95,95,90,99,99,106,106,106,93,93,96,96,96,140,58,103,103,107,107,103,103,89,89,118,118,118,118,93,114,153,153,124,134,106,106,96,82,91,87,87,96,82,82,82,115,115,115,115,151,151,103,103,103,105,86,29,107,100,100,64,64,64,70,70,70,52,161,161,161,86,55,78,108,103,103,110,106,98,75,113,98,74,74,86,91,114,42,104,104,105,105,90,90,90,90,101,88,113,111,94,94,94,96,109,109,109,95,121,121,163,163,103,66,103,103,97,97,73,62,107,107,91,91,76,117,81,81,110,90,94,94,94,78,111,111,111,118,86,86,86,94,94,124,83,83,83,87,94,92,100,100,100,118,104,149,149,149,24,24,91,88,100,115,115,111,111,107,53,53,101,101,113,50,108,93,93,91,110,92,87,87,87,82,71,71,71,79,92,92,87,98,66,102,102,102,102,121,119,119,102,102,96,96,68,65,83,83,140,140,117,70,66,94,94,94,76,76,91,106,90,90,79,79,79,100,121,99,99,99,97,88,51,117,117,87,108,108,94,94,102,94,104,104,104,101,101,101,53,53,40,86,114,114,114,127,127,129,134,134,127,127,109,78,128,128,128,122,132,132,132,132,132,93,96,96,110,110,90,90,69,143,143,141,89,75,75,174,174,75,75,148,148,134,134,134,107,91,91,91,81,109,109,109,118,118,118,94,154,154,154,78,128,128,126,126,101,98,107,107,107,111,157,133,133,101,48,48,107,107,107,95,95,95,70,103,103,90,96,63,96,90,90,66,119,110,109,93,93,118,118,100,90,103,90,90,90,96,92,92,57,90,90,109,109,109,89,89,79,136,136,136,93,131,152,152,83,83,96,102,95,95,95,95,88,88,88,88,94,94,94,94,85,85,85,114,114,114,93,93,93,75,92,92,92,177,177,93,93,93,108,130,99,99,70,97,97,97,108,97,95,90,134,134,134,95,124,38,38,38,67,94,94,94,135,135,137,57,108,92,106,55,55,126,126,74,72,84,61,86,86,75,75,103,103,103,103,103,103,103,124,139,114,131,131,97,97,97,97,65,65,80,80,98,98,98,98,143,143,108,108,108,80,80,80,122,122,81,99,97,96,136,136,42,109,89,89,92,92,162,162,162,119,119,119,97,100,100,100,102,102,94,94,94,92,92,92,97,97,97,54,105,105,105,105,105,90,95,110,110,110,104,75,75,75,150,150,126,52,126,78,110,98,92,95,121,107,107,106,97,97,97,92,86,127,82,82,82,98,98,99,100,92,92,82,82,72,72,85,85,133,153,153,153,100,100,88,88,88,132,102,102,124,124,115,115,106,106,162,162,162,162,103,103,97,97,116,116,116,95,120,120,120,102,95,102,109,109,105,103,89,89,123,123,119,119,93,93,52,73,73,74,120,133,95,95,73,73,94,94,94,94,92,92,124,87,112,112,112,84,84,115,84,71,86,98,119,119,119,109,109,109,96,96,66,88,88,87,82,102,115,115,74,74,94,94,94,94,88,88,124,106,106,83,83,96,32,101,91,91,66,93,132,132,129,129,129,85,85,85,59,59,98,62,107,105,105,92,105,105,102,102,102,102,81,104,72,81,82,82,82,82,105,99,99,99,99,69,69,102,103,103,128,85,94,94,94,86,100,100,100,110,110,110,91,99,99,91,107,107,108,108,108,109,109,53,57,64,54,138,138,96,96,109,96,98,98,98,133,133,133,101,124,124,127,127,127,126,126,141,134,134,134,108,108,108,120,84,103,103,103,122,122,126,108,100,96,117,117,93,93,100,81,81,81,81,93,120,95,95,95,84,126,110,110,108,108,108,78,98,76,84,116,80,28,110,110,86,86,86,90,60,108,89,54,104,104,102,106,61,113,113,113,109,80,109,98,106,117,117,99,92,109,109,109,109,91,77,33,33,96,135,135,114,114,114,91,90,90,146,94,94,75,104,131,118,94,72,72,72,132,112,112,109,109,109,117,105,105,105,70,105,76,103,133,91,91,91,102,102,88,85,85,85,85,97,97,97,46,46,29,82,97,91,151,125,91,108,91,84,141,84,92,94,118,118,103,92,92,96,87,87,125,136,113,102,93,135,151,151,117,117,98,98,98,91,84,97,119,97,97,97,92,92,123,123,123,103,91,92,137,90,97,112,112,87,87,87,91,78,104,101,101,101,88,24,83,83,54,81,100,113,128,74,74,74,102,80,98,205,83,83,102,102,112,112,106,106,108,137,86,127,127,127,93,122,93,93,106,106,112,93,93,81,81,81,88,101,107,113,124,123,123,92,128,78,168,132,95,95,140,140,74,77,107,88,88,108,91,108,118,118,100,118,116,114,118,119,119,115,111,111,120,120,91,105,105,105,105,114,94,94,73,135,135,91,91,91,91,44,82,96,94,124,103,124,124,103,99,116,116,72,72,86,86,107,95,95,45,150,84,92,111,111,75,118,118,119,107,101,119,93,93,100,100,99,99,99,99,101,113,69,83,32,32,32,105,105,27,90,90,129,128,85,97,97,100,100,209,152,100,99,93,80,80,91,122,134,134,134,69,89,99,99,95,100,100,100,121,121,88,97,97,110,110,86,105,155,128,128,93,107,104,104,104,104,128,128,128,102,102,86,86,86,86,82,111,126,126,101,101,121,106,98,62,98,112,116,114,96,96,96,125,100,100,165,165,91,101,87,93,88,88,96,110,96,88,88,88,94,131,44,44,119,119,99,99,108,107,105,89,89,120,89,107,115,98,97,97,117,117,126,126,126,126,97,117,117,106,90,90,106,106,96,124,124,84,104,103,103,102,85,94,110,93,93,84,104,104,124,92,92,64,104,94,94,91,24,83,112,112,107,107,107,107,102,102,125,93,98,138,98,94,141,89,141,99,99,99,99,95,106,106,98,111,107,113,142,102,94,101,101,121,121,113,119,119,144,144,95,94,98,98,130,117,61,96,124,92,92,90,45,91,106,106,92,87,87,110,83,94,94,133,133,133,133,97,77,77,97,86,86,89,91,119,94,53,98,52,54,54,103,103,127,127,86,53,114,114,114,102,84,84,134,106,103,117,105,105,84,58,122,122,90,91,116,130,130,88,88,102,88,113,122,69,141,97,141,110,62,125,125,133,97,75,115,44,104,104,53,91,91,70,102,89,115,89,89,114,97,99,66,66,111,104,104,132,101,120,120,91,102,109,109,157,132,157,101,103,121,121,121,96,121,121,54,96,70,129,90,60,99,155,155,155,155,119,110,95,88,109,109,150,95,90,93,93,123,92,96,98,96,104,84,122,122,111,101,101,101,79,131,86,86,86,86,96,131,131,131,95,95,128,102,102,66,65,114,84,83,91,91,99,99,101,148,67,148,91,101,91,91,118,118,135,92,126,143,143,143,143,120,120,108,72,106,106,95,95,118,81,126,131,89,73,91,93,94,124,73,124,104,110,116,97,96,107,107,94,92,84,111,102,102,81,81,109,109,98,98,106,112,116,97,125,125,105,93,93,93,129,124,124,132,132,139,133,90,90,91,91,65,91,88,95,81,81,77,107,107,107,87,108,108,102,102,102,122,140,140,140,145,171,171,70,68,86,103,138,138,110,93,93,102,87,127,127,127,92,95,95,87,103,91,87,101,122,101,122,102,102,110,110,105,105,89,93,41,107,107,95,93,100,93,88,96,96,96,117,117,90,47,62,100,108,98,138,94,93,71,71,83,130,130,98,99,99,101,99,98,107,86,105,105,93,82,99,99,117,130,102,81,139,129,96,66,105,108,108,108,163,163,125,132,132,116,125,125,125,125,137,90,90,82,171,171,119,69,69,60,110,110,107,98,109,89,145,62,94,62,118,118,118,86,86,86,74,151,93,105,105,93,120,120,120,54,54,133,109,109,94,116,116,68,126,124,117,117,117,87,115,115,115,97,125,101,109,66,122,97,124,97,97,90,90,72,97,94,115,84,115,104,140,106,108,92,104,92,73,73,73,124,124,96,89,118,118,94,94,113,113,126,101,91,98,137,137,104,104,104,104,95,125,125,125,96,97,97,88,99,99,129,75,91,136,136,118,118,92,92,104,104,104,132,108,92,170,45,95,90,126,102,170,170,170,89,153,104,82,129,86,86,85,85,85,85,94,88,86,86,88,92,92,92,72,118,108,98,98,95,125,138,81,54,54,109,96,108,126,126,87,81,81,124,168,90,98,90,92,91,93,101,65,65,117,117,117,117,92,92,88,88,95,79,116,106,104,70,89,83,83,116,133,133,71,100,114,114,134,122,72,120,82,101,101,96,96,110,102,99,99,89,55,94,85,90,101,80,105,105,88,87,97,86,97,84,98,98,98,113,113,113,113,110,110,110,88,110,88,116,96,104,104,104,72,110,47,139,99,77,88,87,87,180,102,102,102,138,138,138,96,94,90,128,128,104,97,133,96,106,115,111,111,111,101,139,139,139,117,148,117,117,164,164,87,104,104,83,83,88,82,140,140,95,91,76,87,87,85,85,78,107,29,130,80,100,108,93,111,89,91,118,93,89,121,84,107,107,86,99,103,87,101,98,112,83,54,102,115,88,88,99,102,102,113,102,103,139,139,97,92,94,119,119,93,123,108,124,86,117,91,92,92,93,97,93,100,96,107,107,107,104,104,86,120,120,81,25,22,24,113,113,107,100,132,77,96,96,80,80,136,67,40,135,135,93,112,135,120,54,93,135,135,137,109,87,87,102,102,118,106,97,92,92,108,128,125,125,91,91,124,124,78,143,68,128,128,110,110,133,75,98,97,97,131,63,93,80,104,108,92,108,113,113,113,118,93,97,114,89,94,60,99,85,85,83,126,109,100,98,98,114,72,101,108,94,94,111,85,85,85,103,103,89,89,117,89,75,100,99,100,117,119,119,129,129,87,87,92,97,97,67,64,100,67,64,89,89,89,92,98,141,119,112,119,118,115,98,126,116,101,101,90,103,96,88,91,91,93,27,93,140,140,114,128,88,133,133,152,98,152,89,152,152,101,100,90,90,92,86,125,125,125,159,135,89,173,99,95,96,90,91,87,90,90,123,123,123,95,89,131,108,126,128,28,87,116,116,116,98,102,102,104,132,86,132,86,119,88,108,108,111,110,121,107,121,98,81,113,101,113,74,146,96,28,100,88,131,100,100,62,62,93,62,111,111,96,96,96,110,110,99,66,94,91,95,163,95,112,112,112,152,135,105,95,83,140,110,110,115,133,133,133,77,94,105,96,96,99,99,99,131,93,94,76,115,118,130,84,113,113,113,74,95,74,69,87,87,87,110,83,76,83,124,176,121,85,94,90,86,86,83,88,92,92,92,105,105,105,84,108,126,53,104,89,98,61,78,89,140,87,140,126,95,96,101,71,98,99,142,132,142,116,121,116,121,117,130,102,94,99,118,144,144,95,64,130,119,119,104,119,117,124,91,115,45,76,76,92,103,103,100,93,110,110,106,106,117,117,46,46,46,46,130,150,150,63,114,132,101,107,105,98,91,91,151,105,151,66,127,93,93,93,102,109,128,54,106,87,87,110,126,126,118,142,142,71,71,135,75,59,119,81,86,91,103,108,95,95,110,69,95,133,94,132,94,168,72,97,97,102,106,109,155,89,109,99,128,70,90,97,102,89,85,60,119,116,113,90,90,83,128,68,100,100,120,62,143,82,133,78,157,135,135,92,128,51,44,89,70,121,94,98,125,111,85,96,104,91,92,119,87,95,115,115,91,105,89,100,93,129,123,103,91,91,170,84,95,70,70,70,108,102,62,102,172,172,172,103,108,96,118,118,118,128,66,93,130,114,96,84,125,84,94,94,133,148,95,119,101,92,92,114,93,86,75,75,91,159,117,83,145,145,90,81,87,76,92,104,72,130,130,105,107,108,91,92,108,118,90,99,73,117,95,93,104,94,153,87,87,88,101,101,84,86,101,23,92,91,99,121,95,95,94,101,127,102,113,75,83,87,115,98,100,98,130,159,159,132,76,133,133,131,131,91,114,114,61,97,104,80,105,105,148,108,71,148,101,101,115,96,116,116,116,97,97,90,171,120,120,120,131,131,131,133,93,111,118,94,97,97,93,93,78,78,78,119,92,97,88,92,92,99,102,97,63,107,89,89,89,82,90,89,107,56,93,92,69,104,92,93,93,93,119,91,102,63,115,118,126,92,100,99,101,110,126,99,153,81,71,98,98,83,112,112,118,105,100,93,117,151,130,80,129,119,93,82,89,101,123,100,99,99,123,111,81,103,103,86,116,108,108,98,116,116,116,137,82,82,62,92,92,104,93,111,111,110,95,22,22,107,53,114,81,101,94,91,91,91,103,74,127,95,93,93,93,93,135,136,98,83,87,90,90,96,68,118,118,133,119,119,105,124,87,90,92,86,103,84,120,110,110,112,107,92,69,94,132,91,139,86,92,120,131,106,74,121,121,126,109,157,117,23,71,94,88,89,85,85,91,122,99,96,96,90,68,119,109,109,109,107,93,58,111,82,103,103,96,98,88,88,107,128,75,94,106,140,129,129,120,111,23,130,23,116,25,90,116,90,20,88,105,58,102,105,102,91,75,99,92,118,107,107,149,129,86,102,98,98,98,101,103,113,93,91,92,70,27,152,83,89,83,95,81,81,103,125,93,93,127,104,88,120,119,100,148,91,91,168,168,159,168,93,93,148,89,126,81,91,94,59,173,130,113,140,140,116,29,119,119,86,86,109,124,117,45,126,100,75,64,140,95,72,107,98,107,96,86,113,115,121,23,67,91,103,143,119,99,84,90,96,28,111,140,140,88,120,106,81,98,109,66,87,106,124,52,102,74,89,97,96,109,103,63,104,96,106,106,95,108,110,88,88,111,92,96,143,143,143,116,116,116,91,123,122,94,94,101,101,86,90,115,83,86,106,132,132,112,101,101,140,100,142,91,88,107,107,92,94,107,63,103,86,84,133,88,93,95,107,66,95,139,90,87,140,113,113,113,148,93,125,86,119,83,115,95,81,102,99,99,86,89,81,103,98,132,119,98,90,108,118,109,84,88,100,99,132,108,95,95,86,115,84,97,123,100,100,102,126,111,117,108,104,93,72,89,108,108,110,93,100,108,96,61,88,115,97,97,86,87,143,108,108,113,95,109,100,114,119,97,128,111,103,136,74,71,105,205,205,93,141,105,86,102,120,120,80,82,68,109,87,152,30,87,87,90,135,87,87,98,110,112,88,91,120,120,109,112,63,80,94,139,81,110,91,79,140,106,70,95,89,70,117,105,66,96,136,93,71,93,93,98,98,93,72,104,111,94,107,84,103,86,121,44,72,103,88,93,82,100,93,95,59,103,44,96,120,128,98,111,98,119,89,93,125,108,87,111,25,119,25,85,85,88,98,97,116,129,89,108,61,92,103,135,107,82,118,78,149,100,102,94,94,94,90,93,95,96,98,70,90,94,95,109,120,92,108,89,98,111,86,106,30,133,86,148,126,95,61,107,107,91,94,94,123,176,121,98,83,95,177,135,24,173,132,94,110,73,130,72,111,101,108,91,111,103,72,133,117,99,94,118,86,118,130,103,103,72,50,67,95,95,84,86,99,67,53,106,83,120,143,95,94,121,99,127,99,83,102,94,101,88,94,98,97,83,98,97,123,123,123,74,74,96,99,114,121,121,106,120,92,92,105,93,93,116,120,120,99,115,83,96,133,107,135,88,95,77,96,101,121,40,96,136,86,40,92,86,94,115,94,94,118,109,119,119,100,86,120,95,107,115,97,102,86,120,93,88,176,93,60,95,124,124,92,94,110,81,96,90,89,92,103,96,136,122,97,96,95,90,124,110,64,100,118,153,121,126,111,94,90,90,95,79,72,68,112,100,112,94,98,97,99,98,143,118,126,95,88,99,93,90,96,123,96,40,105,96,109,109,110,108,98,100,93,95,83,116,95,91,113,69,89,95,110,117,109,95,95,145,132,89,102,98,105,105,128,111,111,113,120,96,95,58,97,96,105,135,87,85,61,111,82,60,106,135,128,87,118,90,90,96,92,86,97,101,93,110,83,88,103,98,109,135,135,148,90,104,124,53,120,78,99,96,122,130,120,103,131,97,103,83,91,122,107,117,74,86,121,49,92,116,171,102,102,96,86,109,106,98,126,83,97,82,100,98,104,131,107,111,96,140,44,91,103,86,96,52,135,133,94,104,98,99,100,116,137,98,97,82,116,92,119,96,79,102,117,108,87,84,112,118,78,108,111,94,102,98,93,91,91,97,101,146,99,115,116,145,102,122,94,109,115,111,87,114,98,84,94,93,119,107,92,133,105,95,115,101,92,101,130,111,94,113,133,94,90,119,99,75,127,81,108,135,97,135,135,103,105,125,40,104,93,114,114,124,117,100,90,135,124,93,92,65,137,105,137,77,113,100,110,118,107,94,82,143,102,98,123,145,90,119,114,94,130,133,103,107,107,92,108,40,104,93,85,124,97,112,118,145,92,124,145,95,95,137,107,94,97,97,44,107,130,99,110,92,133,105,94,98,101,136,92,106,132,106,94,130,123,95,95,133,83,104,98,95,137,93,96,124,85,123,104,145,99,108,97,95,101,92,100,115,116,107,79,94,102,94,103,81,101,111,91,132,95,140,92,108,145,123,107,103,125,136,121,83,92,96,132,88,99,124,91,95,102,58,101,135,107,100,133,117,117,111,100,139,94,103,95,94,143,104,83,108,111,108,133,92,96,91,80,130,122,135,74,83,112,108,87,106,117,152,82,108,139,99,63,102,79,98,82,121,98,95,111,130,95,140,129,94,92,136,106,74,108,108,102,94,92,79,115,140,120,137,98,94,82,86,150,120,135,95,125,95,117,98,117,72,111,95,115,135,95,98,140,133,131,152,137,95,112,88,154,117,107,154,94,146,116,81,126,115,90,130,100,110,100,98,154,108,83,145,90,132,106,91,96,106,130,106,120,120,127,58,107,108,117,135,83,107,100,88,89,77,78,122,142,85,110,112,132,58,137,86,92,85,129,117,92,106,129,58,113,87,138,83,135,146,122,137,78,146,93,109,125,87,129,93,87,110,115,107,58,87,103,83,93,116,113,96,147,106,58,91,89,91,104,89,103,100,113,109,107,43,113,112,112,90,145,122,140,91,90,35,111,81,119,93,105,112,90,118,127,90,125,147,165,136,123,93,112,122,112,145,95,94,139,110,90,105,90,99,106,99,102,105,135,100,119,90,46,74,115,135,105,133,111,86,119,132,100,112,116,116,107,104,121,92,93,146,113,144,103,87,91,86,146,115,104,103,133,121,100,99,77,70,127,139,113,76,97,89,108,93,135,130,112,106,112,129,93,92,100,102,172,78,136,109,95,110,102,73,97,145,145,116,104,112,104,77,113,113,119,137,150,94,79,113,112,58,96,118,109,139,125,135,77,75,125,130,120,65,96,109,126,116,119,162,86,100,85,99,99,106,88,85,99,103,116,106,121,68,106,123,85,113,106,43,133,127,58,56,130,46,127,106,137,80,89,115,133,23,112,106,91,135,104,126,101,156,156,91,123,144,146,129,97,98,129,137,147,86,127,99,108,93,108,106,125,135,109,133,85,130,98,112,127,106,105,132,112,95,100,86,106,101,119,86,97,150,102,156,144,145,113,93,95,106,94,100,121,68,103,137,179,98,91,119,126,87,121,112,86,79,92,102,103,109,105,111,102,146,83,89,172,84,117,117,103,61,109,106,162,102,92,96,106,106,146,124,95,106,104,142,85,119,139,104,103,138,103,103,82,107,112,140,77,108,109,93,106,103,123,92,112,82,112,75,112,93,106,69,85,172,97,112,91,136,130,89,83,140,108,26,96,150,99,126,108,130,104,109,92,93,110,26,91,99,151,87,92,97,137,23,92,114,110,82,126,100,126,134,135,83,113,147,117,102,124,144,95,87,127,140,107,104,133,142,68,121,90,121,96,103,122,127,106,106,106,89,110,140,89,77,60,92,81,150,122,110,106,92,78,113,146,113,102,96,117,89,120,142,106,139,101,106,73,113,127,125,79,125,95,46,95,95,90,115,115,125,108,99,133,130,133,120,112,113,110,128,129,104,103,72,100,144,158,97,130,91,129,87,98,100,108,99,95,72,88,148,93,121,135,109,141,108,109,131,80,117,97,113,94,94,99,110,101,86,119,104,71,122,93,93,114,156,146,95,77,102,93,92,116,105,104,111,121,103,79,109,113,79,68,121,113,99,106,118,118,84,93,93,127,89,115,92,86,110,128,114,106,76,97,76,150,110,113,132,125,87,121,89,133,91,98,126,73,100,140,135,113,135,58,106,82,100,87,91,127,91,33,93,101,71,86,105,137,112,103,113,129,100,110,96,136,93,117,165,122,120,100,77,110,105,108,44,95,72,100,88,99,112,93,89,112,135,139,108,104,98,125,117,75,92,149,90,105,135,108,158,113,121,110,85,119,112,135,55,135,106,117,85,97,117,102,133,94,107,94,104,126,126,98,128,105,140,122,86,106,104,104,124,124,124,109,102,95,127,86,93,118,122,116,134,134,134,107,126,88,92,145,122,99,87,87,103,98,87,103,139,106,112,119,112,103,127,97,85,82,164,164,113,106,98,151,108,150,133,133,143,100,110,101,151,151,140,103,95,136,90,75,82,106,129,130,97,99,150,44,108,111,100,78,96,105,135,103,108,85,22,80,22,133,113,71,92,94,90,149,93,134,142,123,88,119,112,112,55,114,92,59,147,144,147,95,113,113,125,121,125,105,102,143,111,121,115,105,99,85,122,113,103,139,139,106,139,86,86,77,101,105,80,112,155,91,92,107,107,99,48,107,88,110,96,122,103,129,108,50,140,137,110,110,127,127,97,106,150,74,79,26,107,131,102,83,106,151,97,76,105,60,106,100,106,125,100,72,86,105,85,69,119,91,121,96,121,95,122,105,132,111,122,137,44,109,93,147,149,149,93,97,125,131,98,98,97,103,137,97,78,105,102,121,161,54,122,142,88,85,129,83,92,103,147,95,90,55,113,128,107,128,129,103,97,106,68,85,121,96,115,97,79,79,103,146,119,94,94,87,83,162,162,115,96,127,87,129,107,132,97,107,118,132,135,120,85,180,180,180,87,103,106,88,85,135,113,125,91,81,91,101,130,131,131,108,98,148,81,105,93,123,130,105,140,96,110,132,132,118,143,93,73,91,100,172,77,77,91,110,86,74,150,89,74,106,126,123,70,163,123,89,92,158,141,94,24,92,94,98,98,102,105,54,119,82,123,54,148,121,85,148,126,129,156,103,93,108,112,124,105,94,103,104,84,98,119,135,94,105,91,103,96,104,106,104,80,130,98,98,105,102,93,93,96,96,127,86,114,132,69,99,100,69,118,102,103,88,91,146,146,26,92,100,85,123,112,112,112,79,58,90,107,90,129,81,102,91,74,162,123,100,127,112,99,100,110,140,140,126,113,92,137,85,103,119,91,91,97,106,107,130,105,111,78,78,100,126,98,103,109,149,94,89,94,158,130,108,95,93,93,105,54,93,60,103,55,134,93,105,88,121,114,162,135,99,93,84,95,99,112,95,133,129,95,131,131,102,111,143,143,94,112,112,156,131,96,102,99,115,186,186,128,128,154,155,128,155,115,115,95,112,110,110,72,85,120,102,125,125,147,147,106,26,94,126,85,104,100,125,125,112,106,90,81,81,130,137,106,103,97,134,162,105,76,76,100,151,125,46,103,104,148,148,55,118,95,45,121,119,119,100,150,132,97,122,132,97,148,100,88,22,128,105,94,141,94,67,96,102,97,130,90,90,149,125,97,158,91,158,127,105,105,154,107,93,95,114,73,95,93,77,125,113,146,128,91,102,108,108,43,179,118,113,154,85,103,92,92,112,145,103,146,80,95,105,114,116,114,101,150,107,90,143,96,96,119,72,97,95,88,79,91,112,99,144,101,94,92,123,93,123,99,126,100,135,56,106,111,83,74,60,162,107,150,89,122,137,100,78,101,113,161,161,158,148,90,93,84,117,91,124,46,95,107,111,126,103,95,106,100,92,126,111,128,139,123,87,72,117,110,76,86,118,118,95,98,108,57,54,98,121,122,87,105,116,112,90,109,122,106,88,95,97,104,113,103,24,107,108,135,98,118,102,118,76,96,102,80,73,130,130,140,105,92,109,105,75,86,122,97,127,96,109,92,126,132,108,112,79,135,110,110,102,122,99,99,110,100,53,88,86,106,100,93,103,123,96,91,90,90,103,46,56,111,114,146,127,107,100,127,73,105,93,98,98,105,95,100,108,75,45,97,97,100,100,121,137,115,137,115,95,148,111,109,129,105,133,133,102,131,125,125,73,73,113,130,123,107,127,123,55,91,91,95,86,106,53,98,83,129,88,128,103,120,112,24,131,95,107,68,99,102,93,99,85,92,115,112,156,156,99,156,103,106,115,140,110,110,154,80,155,84,99,46,97,74,104,96,55,110,165,118,102,79,140,102,96,100,92,87,124,92,116,126,148,139,46,123,90,89,111,127,101,101,148,83,71,150,99,151,110,127,123,121,65,97,101,97,110,92,122,110,91,119,96,86,74,97,44,95,91,100,106,103,128,128,83,83,163,97,89,72,80,27,27,94,106,54,125,102,105,93,109,127,109,105,93,125,112,119,105,128,93,86,123,90,94,128,105,91,129,150,99,123,81,91,179,85,140,103,85,68,103,93,84,84,111,95,94,105,143,127,78,100,78,95,113,101,135,97,128,80,94,117,124,97,107,122,135,104,103,85,98,137,140,116,116,109,103,104,129,85,56,113,113,46,93,112,111,93,106,103,95,134,95,127,109,96,78,113,137,86,86,108,73,93,93,123,74,103,45,119,113,142,99,106,94,93,46,103,89,87,133,108,80,110,72,71,87,106,54,162,118,105,101,103,73,105,93,71,55,55,143,107,105,99,110,129,105,107,125,129,100,53,126,100,148,128,138,128,87,102,80,156,73,110,130,106,94,102,118,122,107,73,101,96,71,103,94,84,137,114,143,55,122,61,128,112,122,86,85,106,120,110,142,103,127,114,109,154,154,139,129,100,101,83,156,156,93,100,146,92,95,122,116,113,143,95,122,86,142,95,105,127,142,110,94,94,99,90,98,86,99,94,124,92,69,95,76,97,94,121,131,75,142,121,107,121,97,27,93,131,112,128,101,162,98,131,127,132,109,95,95,112,114,71,71,107,120,86,146,120,102,115,125,81,103,81,154,113,91,163,179,111,131,90,94,90,119,140,117,97,122,146,107,102,122,131,106,143,46,45,95,122,127,107,127,54,105,93,86,119,131,26,109,148,124,97,125,107,95,84,91,140,114,112,86,85,102,134,114,113,103,95,97,99,71,85,123,108,132,99,144,97,105,105,97,140,135,46,105,99,96,111,111,97,133,95,100,102,102,102,126,112,94,68,122,96,103,109,87,146,87,142,111,81,98,94,110,89,150,112,93,143,144,94,87,130,125,123,137,112,130,119,89,101,106,137,99,125,140,123,110,92,100,97,86,142,139,158,85,150,110,109,106,137,90,73,105,80,118,92,85,117,102,112,139,117,101,132,111,132,94,111,68,125,92,86,139,121,83,86,109,101,111,80,84,84,148,119,29,117,47,116,104,88,117,147,109,116,132,119,109,96,109,91,101,123,109,128,99,129,117,126,126,100,88,208,116,132,101,108,128,95,107,155,109,148,104,208,102,99,151,97,117,127,132,135,107,131,91,100,148,117,101,155,99,154,208,109,108,95,91,91,117,110,126,86,97,116,127,100,155,109,155,154,89,135,128,95,161,116,104,134,154,90,155,102,108,119,133,111,169,132,87,146,88,92,105,102,123,113,96,115,93,149,107,96,149,135,147,135,29,154,121,106,129,95,95,107,104,132,124,96,99,116,79,106,105,115,133,119,95,107,117,145,110,107,121,110,116,116,154,98,122,105,106,107,116,124,103,116,89,147,88,112,133,116,91,81,145,90,130,169,119,148,155,108,138,91,121,80,90,45,92,88,145,95,117,94,107,107,135,61,119,139,126,163,137,128,117,115,79,97,148,127,93,90,90,96,105,117,137,125,90,108,110,97,123,115,120,97,104,104,89,150,130,88,116,95,134,108,116,110,114,106,122,129,107,98,47,131,91,147,93,158,148,104,101,121,128,77,145,131,110,131,107,85,112,138,98,93,163,138,109,102,105,139,81,97,119,165,101,113,155,89,117,107,133,95,111,87,111,118,106,148,93,102,137,113,99,97,117,95,87,97,132,87,82,122,106,131,157,115,96,110,134,115,115,110,94,97,99,94,101,119,133,92,82,118,106,158,112,128,128,78,137,79,99,78,104,104,112,96,101,128,132,98,112,132,128,88,91,113,102,111,105,105,141,149,95,95,89,158,116,92,101,137,97,128,122,98,114,71,98,148,101,127,78,110,126,104,93,97,99,99,147,157,115,85,90,99,139,131,95,96,126,126,89,169,97,101,98,98,121,161,121,90,120,126,120,120,97,118,117,87,62,158,86,127,88,97,143,151,91,143,85,122,112,90,133,145,164,88,93,121,115,125,115,97,115,96,107,94,92,135,129,129,133,113,130,135,135,109,107,105,106,105,78,90,97,120,110,96,94,77,77,132,128,133,117,98,109,109,135,106,152,118,166,166,166,128,128,134,161,151,151,109,154,137,102,82,108,98,98,104,110,95,101,119,126,137,104,109,156,122,116,97,85,122,98,107,82,94,75,75,106,150,139,126,85,100,95,94,116,93,117,117,109,116,133,133,154,214,85,85,132,103,132,88,113,137,95,116,91,87,116,127,82,132,169,108,119,115,120,169,79,121,123,110,96,158,97,117,117,95,105,91,106,104,92,124,163,104,158,101,158,112,196,137,90,119,119,103,110,109,159,149,96,93,118,118,128,96,96,52,109,110,135,106,105,93,98,88,88,116,109,158,116,106,29,97,143,46,110,72,98,88,99,149,120,104,104,134,137,86,90,101,112,101,87,112,90,115,94,80,80,75,80,91,89,109,94,97,132,98,146,93,90,117,92,123,92,124,118,214,111,101,116,135,86,137,139,141,99,116,120,87,120,126,157,95,95,126,88,119,86,93,97,123,135,94,117,116,124,99,135,149,115,129,106,104,102,82,124,104,115,115,107,109,148,126,106,153,126,109,97,93,112,159,112,100,99,122,121,121,113,130,110,106,151,91,91,91,85,85,149,146,109,158,114,88,105,124,107,142,94,91,99,102,137,99,123,113,137,99,156,116,141,147,141,92,115,108,87,115,107,112,25,151,123,151,96,110,150,94,101,96,121,109,116,143,104,110,97,149,106,116,116,101,214,85,78,101,141,78,192,104,99,104,100,96,133,128,114,114,157,123,164,79,169,121,152,158,117,150,96,134,145,99,91,91,114,92,110,45,113,104,114,131,72,109,105,153,119,128,103,128,119,119,112,112,93,112,117,116,137,130,152,93,93,80,99,141,152,165,141,94,132,116,161,90,105,149,113,141,127,98,154,91,85,88,99,114,105,123,102,113,156,151,99,101,86,116,82,112,108,145,145,164,119,123,86,79,95,94,150,134,141,98,116,95,98,117,95,110,141,118,101,101,69,113,85,101,122,101,141,137,91,104,120,104,126,104,128,95,95,119,148,99,137,122,122,126,93,93,129,96,150,95,128,165,90,165,117,97,127,149,141,115,91,102,131,120,139,120,81,84,103,103,101,99,120,119,101,93,117,94,52,107,107,116,122,83,83,123,96,94,162,162,101,145,149,128,90,109,141,142,154,97,29,106,137,102,122,92,119,102,137,89,139,101,109,112,108,108,101,119,203,95,148,148,87,132,120,110,129,83,129,96,88,123,88,130,81,143,102,94,149,113,123,97,88,135,85,127,121,68,137,99,128,90,96,100,128,86,133,83,91,112,106,100,98,122,134,89,203,126,203,96,72,92,123,98,81,101,120,86,95,95,97,113,214,127,192,98,98,114,116,129,137,68,143,112,99,104,82,101,112,143,85,81,203,104,108,148,139,143,95,92,137,142,89,93,104,120,192,141,143,108,139,96,129,116,196,129,128,95,137,95,89,68,84,85,196,166,111,85,154,95,108,89,103,85,136,151,98,165,111,165,85,96,69,136,124,154,103,136,124,161,119,151,177,98,94,116,185,163,108,103,95,96,104,117,173,94,69,176,126,135,78,95,108,166,104,112,119,126,136,106,96,128,89,142,139,95,95,133,127,111,103,117,126,121,113,96,104,121,109,187,89,166,166,166,139,101,119,90,177,110,78,154,148,95,148,133,112,136,96,96,110,69,126,81,119,136,139,116,82,104,112,113,166,136,106,98,154,116,89,163,189,75,116,31,185,96,106,81,110,110,148,81,165,69,177,81,89,90,89,108,93,166,101,113,142,187,109,96,103,127,166,98,106,118,103,94,105,128,94,101,151,81,131,130,75,82,101,133,103,101,89,95,108,177,96,114,138,108,177,119,101,69,108,101,161,136,187,103,113,101,113,98,118,119,135,106,89,104,94,89,173,78,163,131,113,79,161,161,133,161,110,138,89,81,109,79,101,155,101,177,119,176,176,81,96,173,124,90,114,97,97,106,154,106,139,177,155,103,154,94,173,87,122,155,151,130,101,133,89,142,87,94,104,176,87,77,114,138,106,97,87,77,116,94,101,82,101,108,161,189,118,103,173,96,102,108,185,95,176,173,108,176,142,108,173,96,106,106,176,176,120,100,100,91,107,33,89,107,90,89,107,89,107,96,112,114,112,102,149,107,87,107,101,85,83,107,81,114,97,123,101,171,102,101,102,64,87,112,126,101,120,96,150,50,81,118,93,100,84,109,107,110,110,97,138,87,83,156,75,104,92,93,102,97,112,98,97,110,87,97,140,140,117,103,116,102,94,105,112,120,90,98,46,58,99,103,124,160,96,93,82,97,115,123,97,116,83,93,90,103,75,82,85,83,102,44,107,136,112,120,108,190,87,98,76,98,104,138,92,25,139,88,92,91,99,115,99,81,101,92,118,118,97,162,114,101,114,156,112,102,120,100,102,144,57,24,112,87,88,121,98,91,105,82,28,91,91,101,90,131,110,25,115,80,96,101,99,108,103,93,82,102,93,81,112,156,85,112,75,90,90,116,94,94,116,86,87,84,113,116,123,116,96,117,105,105,27,104,123,116,50,101,139,60,110,115,105,83,81,96,151,93,93,55,162,81,81,109,140,86,91,101,75,144,46,101,93,93,107,136,87,112,138,72,143,143,114,103,97,104,90,123,128,116,87,87,150,133,150,151,124,98,124,81,120,115,91,116,75,127,114,117,63,116,104,96,57,85,33,121,107,107,92,120,105,26,103,105,103,124,103,92,92,98,46,128,101,100,71,111,99,66,47,92,81,91,81,112,133,44,122,101,97,103,83,83,101,145,117,84,90,96,123,110,109,83,90,83,100,46,82,93,90,90,92,87,100,91,91,99,99,93,96,93,109,102,132,109,109,149,126,112,162,82,149,75,122,103,138,107,93,102,68,108,84,106,103,103,104,60,72,101,46,104,104,80,83,128,101,111,81,96,124,83,81,160,61,90,103,87,116,117,116,127,59,91,102,52,94,92,95,140,113,88,113,110,110,89,26,104,99,42,100,66,100,121,46,115,105,61,136,133,91,113,47,132,140,81,133,102,122,46,116,93,116,145,117,95,86,90,105,120,97,98,112,96,110,106,98,104,103,114,101,124,78,93,61,124,124,131,90,136,124,96,72,105,93,93,126,71,46,87,115,44,84,46,46,91,103,103,102,95,101,85,113,113,97,106,106,70,91,97,82,92,104,85,115,88,80,104,28,90,94,106,98,71,103,135,102,135,85,104,126,104,120,46,114,145,102,81,133,105,89,113,96,97,90,82,28,89,100,100,100,68,27,82,121,121,68,100,132,103,103,72,124,106,102,160,81,81,62,97,103,132,84,101,101,79,95,93,86,102,85,109,108,108,97,106,97,143,106,99,94,94,90,92,62,92,124,131,78,97,92,92,113,126,104,97,92,71,93,107,109,83,149,79,162,91,86,104,122,133,133,85,104,88,97,91,87,102,77,64,101,105,105,92,99,104,46,104,120,115,28,124,98,97,113,108,85,85,83,150,97,71,126,46,46,93,75,137,97,81,93,105,103,110,96,97,105,91,124,83,124,100,103,92,103,94,109,128,128,109,119,63,99,99,28,99,93,81,150,94,94,83,96,171,97,104,114,115,93,95,122,50,105,104,144,24,95,91,33,94,94,99,72,124,93,92,87,78,42,88,131,117,22,100,22,94,104,101,93,102,102,107,84,86,93,137,46,115,137,101,64,81,52,61,97,100,128,119,84,100,135,72,113,101,51,32,104,42,105,94,120,124,54,44,111,17,126,108,101,147,101,110,89,115,130,17,55,102,110,114,107,42,61,61,119,86,106,80,103,135,132,44,46,94,96,100,95,61,46,92,105,60,106,115,124,48,110,95,150,147,87,95,90,63,104,120,64,101,103,122,72,72,124,73,46,122,80,84,98,48,171,72,98,116,99,103,136,132,51,90,119,120,93,90,113,72,147,93,99,93,110,104,8,93,113,70,94,99,72,99,119,124,94,93,90,119,90,51,24,24,158,91,99,88,91,102,107,98,129,98,224,130,102,168,138,130,103,187,104,79,147,117,91,100,79,111,136,137,224,141,187,106,158,79,100,106,99,136,75,104,56,87,84,106,147,168,129,168,102,111,83,117,201,151,56,121,103,108,84,106,100,79,75,136,75,111,131,149,102,89,89,129,88,123,187,185,99,106,171,75,75,104,99,111,100,129,102,102,138,82,98,99,125,165,137,171,105,98,108,100,123,78,130,105,88,160,106,149,111,127,99,116,130,224,90,158,147,103,83,131,100,84,150,150,124,105,112,138,88,117,168,107,98,158,90,85,133,127,105,103,84,130,96,110,156,106,79,138,131,185,157,157,138,168,141,157,88,102,99,137,137,102,157,163,133,162,88,163,162,101,102,83,79,185,165,163,117,121,104,96,90,78,88,88,110,106,156,84,112,130,201,151,105,87,89,89,185,103,101,90,137,201,124,160,37,153,112,137,99,82,82,98,83,99,117,117,131,111,121,99,149,122,75,46,94,85,160,106,116,103,78,116,116,130,84,103,158,185,102,101,136,124,128,136,104,99,110,110,148,99,110,91,148,168,158,100,138,112,176,124,104,176,75,101,106,129,123,106,171,76,138,138,102,87,89,124,179,88,88,136,83,160,83,104,98,88,37,162,93,101,141,106,108,185,94,83,99,81,100,99,122,122,122,95,122,106,129,110,156,107,171,131,201,131,141,84,105,224,185,98,116,116,83,160,88,114,104,88,83,79,79,96,96,118,96,111,165,185,124,127,171,124,124,123,85,101,123,94,99,116,165,150,98,98,134,88,131,78,158,116,101,100,99,100,163,160,124,137,120,102,88,123,42,91,168,100,209,92,131,165,171,119,109,127,99,95,94,106,106,137,124,130,129,129,89,162,116,151,179,111,130,116,90,179,104,102,128,88,153,162,97,111,101,111,94,93,185,125,125,171,111,88,109,159,85,106,137,90,107,99,105,105,76,91,137,156,105,47,47,179,130,166,98,99,99,105,114,100,114,83,79,148,111,118,93,117,165,116,107,106,150,162,137,159,176,176,101,109,98,101,89,99,132,138,124,88,76,116,144,78,144,166,134,92,209,105,107,117,136,88,97,88,120,141,88,141,148,98,134,91,167,89,137,132,159,148,95,96,90,124,141,94,105,123,134,137,120,107,106,144,137,166,89,98,101,101,104,109,124,134,153,148,83,120,124,132,112,134,88,99,134,134,83,153,153,85,85,148,85,84,85,90,80,86,108,109,90,148,162,134,85,134,117,90,94,85,163,163,48,172,90,86,134,93,172,110,93,178,94,87,93,81,134,86,148,153,132,153,94,96,85,92,108,163,94,110,87,172,89,84,109,109,90,109,178,192,192,109,163,104,96,162,162,172,95,178,104,192,90,104,127,120,134,110,120,89,153,72,132,85,127,127,127,120,95,90,95,89,102,50,90,95,109,109,80,192,94,90,103,120,120,102,90,103,92,127,103,93,94,120,102,94,132,120,93,110,84,172,93,123,123,124,172,101,134,161,114,110,97,118,110,134,141,88,134,97,123,84,176,97,84,118,137,176,96,131,84,98,156,134,119,100,93,237,172,92,97,88,101,127,96,157,25,100,25,118,119,93,120,92,101,96,88,118,94,161,137,127,156,156,84,92,120,172,134,114,114,141,176,79,98,110,131,237,100,92,120,141,141,94,96,176,157,161,156,237,98,98,98,100,124,106,106,94,106,101,137,131,161,127,96,98,143,253,125,112,181,153,112,181,143,102,100,153,94,181,125,112,103,66,112,132,253,103,162,168,168,112,125,130,103,112,100,121,143,83,153,94,168,115,130,162,103,81,253,91,104,103,81,91,91,104,97,132,102,89,181,81,121,162,137,100,162,103,132,66,143,89,102,130,137,66,97,104,91,89,83,137,83,97,121,100,115,94,125,193,163,56,112,30,122,118,154,94,88,102,85,102,95,143,165,112,104,165,95,112,145,91,93,102,122,122,111,168,164,102,112,85,163,91,160,120,84,149,143,75,88,85,164,107,154,117,110,93,110,163,168,88,148,193,73,168,99,145,95,110,120,101,94,174,174,122,191,91,88,83,102,88,94,141,114,84,149,149,112,93,128,154,154,107,154,142,114,85,95,160,62,96,104,148,193,99,168,118,118,117,105,93,94,114,108,191,71,111,112,195,195,128,112,88,164,149,93,88,143,112,163,163,75,93,165,49,151,163,154,93,130,130,88,88,118,154,107,125,105,105,125,105,95,95,83,108,49,126,95,93,163,151,102,83,164,142,28,88,112,118,108,96,126,93,151,107,125,170,141,93,107,61,96,126,91,163,101,118,94,94,95,94,110,170,108,114,160,170,105,105,160,170,86,121,114,86,138,155,161,173,140,92,119,106,92,86,161,92,140,173,101,86,171,177,119,92,173,129,92,93,129,171,171,116,86,93,86,118,119,97,85,85,153,153,138,101,114,147,171,147,119,160,138,114,149,140,129,108,114,108,104,69,160,160,129,129,121,173,151,121,97,97,116,120,120,86,92,101,119,85,114,195,151,151,89,114,104,153,120,147,82,101,114,93,137,129,137,91,91,100,93,114,93,116,118,93,147,195,137,195,97,106,116,101,101,101,138,118,177,155,86,80,151,134,116,89,89,138,155,106,104,177,100,138,147,82,170,170,161,93,134,170,161,134,170,111,146,146,166,127,146,93,128,152,90,116,146,111,93,116,111,116,116,200,90,200,166,152,93,166,127,128,152,137,103,200,166,137,111,90,103,137,158,108,158,228,108,228,185,163,127,158,108,185,185,163,127,228,194,163,185,127,153,194,194,127,153,153,194,73,143,143,98,97,104,98,97,108,98,115,108,115,97,98,73,98,93,73,104,115,111,93,93,104,115,111,58,58,63,42,42,63,76,18,18,76,120,120,120,116,116,116,120],\"hoverinfo\":\"y\",\"type\":\"box\",\"fillcolor\":\"rgba(52,152,219,1)\",\"marker\":{\"opacity\":null,\"outliercolor\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(52,152,219,1)\"},\"size\":5.66929133858268},\"line\":{\"color\":\"rgba(236,240,241,1)\",\"width\":1.88976377952756},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":47.0236612702366},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1933.9375,2026.0625],\"tickmode\":\"array\",\"ticktext\":[\"1950\",\"1975\",\"2000\",\"2025\"],\"tickvals\":[1950,1975,2000,2025],\"categoryorder\":\"array\",\"categoryarray\":[\"1950\",\"1975\",\"2000\",\"2025\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Release Year\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-4.25,265.25],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"50\",\"100\",\"150\",\"200\",\"250\"],\"tickvals\":[0,50,100,150,200,250],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"50\",\"100\",\"150\",\"200\",\"250\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Duration (Minutes)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a5f50f8ca\":{\"x\":{},\"y\":{},\"type\":\"box\"}},\"cur_data\":\"b5a5f50f8ca\",\"visdat\":{\"b5a5f50f8ca\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nWe can actually test this hypothesis with a T Test.\nttest_data \u0026lt;- netflix_wrangled %\u0026gt;% filter(type == \u0026#34;Movie\u0026#34;) %\u0026gt;% mutate(is_short = factor(ifelse(duration_hours \u0026lt; 3, TRUE, FALSE))) %\u0026gt;% select(release_year, is_short) t.test( release_year ~ is_short, data = ttest_data, conf.level = 0.95 ) ## ## Welch Two Sample t-test ## ## data: release_year by is_short ## t = -18.712, df = 695.07, p-value \u0026lt; 2.2e-16 ## alternative hypothesis: true difference in means between group FALSE and group TRUE is not equal to 0 ## 95 percent confidence interval: ## -12.061531 -9.770746 ## sample estimates: ## mean in group FALSE mean in group TRUE ## 2001.830 2012.746  We see that there is a statistically significant difference between the average release year for movies that have a 3+ hour duration and shorter duration movies. Take this with a grain of salt however as the population difference between the short and long movies is very big (600 vs 11000). I will revisit this at the end of this post and try to model it using a few machine learning algorithms.\nMedia Categories (Genres)  {\"x\":{\"data\":[{\"orientation\":\"h\",\"width\":[0.899999999999999,0.899999999999999,0.899999999999999,0.9,0.9,0.9,0.9,0.9,0.9,0.9],\"base\":[0,0,0,0,0,0,0,0,0,0],\"x\":[116,112,112,109,109,107.5,107,106,106,106],\"y\":[10,8,9,6,7,5,4,1,2,3],\"text\":[\"reorder(listed_in, n): Classic Movies\nn: 116.0\",\"reorder(listed_in, n): Music\nn: 112.0\",\"reorder(listed_in, n): Musicals\nn: 112.0\",\"reorder(listed_in, n): Dramas\nn: 109.0\",\"reorder(listed_in, n): International Movies\nn: 109.0\",\"reorder(listed_in, n): Action\nn: 107.5\",\"reorder(listed_in, n): Adventure\nn: 107.0\",\"reorder(listed_in, n): Faith\nn: 106.0\",\"reorder(listed_in, n): Romantic Movies\nn: 106.0\",\"reorder(listed_in, n): Spirituality\nn: 106.0\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":155.417185554172},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-5.8,121.8],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"30\",\"60\",\"90\",\"120\"],\"tickvals\":[0,30,60,90,120],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"30\",\"60\",\"90\",\"120\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Median Duration\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,10.6],\"tickmode\":\"array\",\"ticktext\":[\"Faith\",\"Romantic Movies\",\"Spirituality\",\"Adventure\",\"Action\",\"Dramas\",\"International Movies\",\"Music\",\"Musicals\",\"Classic Movies\"],\"tickvals\":[1,2,3,4,5,6,7,8,9,10],\"categoryorder\":\"array\",\"categoryarray\":[\"Faith\",\"Romantic Movies\",\"Spirituality\",\"Adventure\",\"Action\",\"Dramas\",\"International Movies\",\"Music\",\"Musicals\",\"Classic Movies\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Category\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a4268c665\":{\"x\":{},\"y\":{},\"type\":\"bar\"}},\"cur_data\":\"b5a4268c665\",\"visdat\":{\"b5a4268c665\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nWe can also check the median duration of each category.\n {\"x\":{\"data\":[{\"orientation\":\"h\",\"width\":[0.899999999999999,0.899999999999999,0.899999999999999,0.9,0.9],\"base\":[0,0,0,0,0],\"x\":[44,24.5,11,9.5,7],\"y\":[10,9,8,7,6],\"text\":[\"reorder(listed_in, median_years_to_be_added): Classic Movies\nmedian_years_to_be_added: 44.0\nportion: Highest\",\"reorder(listed_in, median_years_to_be_added): Cult Movies\nmedian_years_to_be_added: 24.5\nportion: Highest\",\"reorder(listed_in, median_years_to_be_added): Teen TV Shows\nmedian_years_to_be_added: 11.0\nportion: Highest\",\"reorder(listed_in, median_years_to_be_added): Anime Series\nmedian_years_to_be_added: 9.5\nportion: Highest\",\"reorder(listed_in, median_years_to_be_added): Action\nmedian_years_to_be_added: 7.0\nportion: Highest\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"Highest\",\"legendgroup\":\"Highest\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"h\",\"width\":[0.9,0.9,0.9,0.9,0.9],\"base\":[0,0,0,0,0],\"x\":[1,1,1,1,1],\"y\":[1,2,3,4,5],\"text\":[\"reorder(listed_in, median_years_to_be_added): TV Action\nmedian_years_to_be_added: 1.0\nportion: Lowest\",\"reorder(listed_in, median_years_to_be_added): TV Dramas\nmedian_years_to_be_added: 1.0\nportion: Lowest\",\"reorder(listed_in, median_years_to_be_added): TV Horror\nmedian_years_to_be_added: 1.0\nportion: Lowest\",\"reorder(listed_in, median_years_to_be_added): TV Mysteries\nmedian_years_to_be_added: 1.0\nportion: Lowest\",\"reorder(listed_in, median_years_to_be_added): TV Sci-Fi\nmedian_years_to_be_added: 1.0\nportion: Lowest\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(46,204,113,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"Lowest\",\"legendgroup\":\"Lowest\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":117.160647571607},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.2,46.2],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\"],\"tickvals\":[0,10,20,30,40],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Median Amount of Years to be Added\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,10.6],\"tickmode\":\"array\",\"ticktext\":[\"TV Action\",\"TV Dramas\",\"TV Horror\",\"TV Mysteries\",\"TV Sci-Fi\",\"Action\",\"Anime Series\",\"Teen TV Shows\",\"Cult Movies\",\"Classic Movies\"],\"tickvals\":[1,2,3,4,5,6,7,8,9,10],\"categoryorder\":\"array\",\"categoryarray\":[\"TV Action\",\"TV Dramas\",\"TV Horror\",\"TV Mysteries\",\"TV Sci-Fi\",\"Action\",\"Anime Series\",\"Teen TV Shows\",\"Cult Movies\",\"Classic Movies\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Category\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"title\":{\"text\":\"portion\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a145bb0f0\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"bar\"}},\"cur_data\":\"b5a145bb0f0\",\"visdat\":{\"b5a145bb0f0\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nAnother potentially interesting metric we could explore is the median amount of years passed between the production and upload to netflix for both Movies and TV Shows. In the graph I took the 5 longest and 5 shortest pieces of media when it comes to that “upload time”. We can see that in TV Shows take up all the 5 spots for lowest upload times. That could be attributed to a general drop in upload time and that along with the fact that TV shows started appearing mostly recently could explain this.\n\nI want to shift the interest over to the ratings for a bit which I also found interesting.\n {\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.9,0.9,0.9,0.9,0.9],\"base\":[0,0,0,0,0],\"x\":[5,4,3,2,1],\"y\":[2178,2038,1405,707,696],\"text\":[\"reorder(listed_in, n): International Movies\nn: 2178\",\"reorder(listed_in, n): Dramas\nn: 2038\",\"reorder(listed_in, n): Comedies\nn: 1405\",\"reorder(listed_in, n): Adventure\nn: 707\",\"reorder(listed_in, n): Action\nn: 696\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":53.3997509339975},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,5.6],\"tickmode\":\"array\",\"ticktext\":[\"Action\",\"Adventure\",\"Comedies\",\"Dramas\",\"International Movies\"],\"tickvals\":[1,2,3,4,5],\"categoryorder\":\"array\",\"categoryarray\":[\"Action\",\"Adventure\",\"Comedies\",\"Dramas\",\"International Movies\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Category\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-108.9,2286.9],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"500\",\"1000\",\"1500\",\"2000\"],\"tickvals\":[0,500,1000,1500,2000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"500\",\"1000\",\"1500\",\"2000\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Amount\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a265c9f24\":{\"x\":{},\"y\":{},\"type\":\"bar\"}},\"cur_data\":\"b5a265c9f24\",\"visdat\":{\"b5a265c9f24\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nHere we see that most pieces of media from this data set are included in the “International Movies”, “Dramas” and “Comedies” categories.\nRatings We can also take a look at the ratings these Movies and Shows have.\n {\"x\":{\"data\":[{\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2010],\"y\":[298,281,352,464,549,826,1301,1464,1519,1181,891,931,1218,1604,1533,1383,876,583,488,397,321,351,298],\"text\":[\"release_year: 2010\nn: 53\nrating: PG-13\",\"release_year: 2011\nn: 40\nrating: PG-13\",\"release_year: 2012\nn: 45\nrating: PG-13\",\"release_year: 2013\nn: 24\nrating: PG-13\",\"release_year: 2014\nn: 34\nrating: PG-13\",\"release_year: 2015\nn: 50\nrating: PG-13\",\"release_year: 2016\nn: 82\nrating: PG-13\",\"release_year: 2017\nn: 69\nrating: PG-13\",\"release_year: 2018\nn: 85\nrating: PG-13\",\"release_year: 2019\nn: 37\nrating: PG-13\",\"release_year: 2020\nn: 40\nrating: PG-13\",\"release_year: 2020\nn: 40\nrating: PG-13\",\"release_year: 2019\nn: 37\nrating: PG-13\",\"release_year: 2018\nn: 85\nrating: PG-13\",\"release_year: 2017\nn: 69\nrating: PG-13\",\"release_year: 2016\nn: 82\nrating: PG-13\",\"release_year: 2015\nn: 50\nrating: PG-13\",\"release_year: 2014\nn: 34\nrating: PG-13\",\"release_year: 2013\nn: 24\nrating: PG-13\",\"release_year: 2012\nn: 45\nrating: PG-13\",\"release_year: 2011\nn: 40\nrating: PG-13\",\"release_year: 2010\nn: 53\nrating: PG-13\",\"release_year: 2010\nn: 53\nrating: PG-13\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(52,152,219,1)\",\"hoveron\":\"points\",\"name\":\"PG-13\",\"legendgroup\":\"PG-13\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2010],\"y\":[239,243,297,375,443,672,1138,1323,1409,1118,813,891,1181,1519,1464,1301,826,549,464,352,281,298,239],\"text\":[\"release_year: 2010\nn: 59\nrating: R\",\"release_year: 2011\nn: 38\nrating: R\",\"release_year: 2012\nn: 55\nrating: R\",\"release_year: 2013\nn: 89\nrating: R\",\"release_year: 2014\nn: 106\nrating: R\",\"release_year: 2015\nn: 154\nrating: R\",\"release_year: 2016\nn: 163\nrating: R\",\"release_year: 2017\nn: 141\nrating: R\",\"release_year: 2018\nn: 110\nrating: R\",\"release_year: 2019\nn: 63\nrating: R\",\"release_year: 2020\nn: 78\nrating: R\",\"release_year: 2020\nn: 78\nrating: R\",\"release_year: 2019\nn: 63\nrating: R\",\"release_year: 2018\nn: 110\nrating: R\",\"release_year: 2017\nn: 141\nrating: R\",\"release_year: 2016\nn: 163\nrating: R\",\"release_year: 2015\nn: 154\nrating: R\",\"release_year: 2014\nn: 106\nrating: R\",\"release_year: 2013\nn: 89\nrating: R\",\"release_year: 2012\nn: 55\nrating: R\",\"release_year: 2011\nn: 38\nrating: R\",\"release_year: 2010\nn: 59\nrating: R\",\"release_year: 2010\nn: 59\nrating: R\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(46,204,113,1)\",\"hoveron\":\"points\",\"name\":\"R\",\"legendgroup\":\"R\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2010],\"y\":[150,147,169,225,283,455,822,941,1022,787,656,5,9,813,1118,1409,1323,1138,672,443,375,297,243,239,150],\"text\":[\"release_year: 2010\nn: 89\nrating: TV-14\",\"release_year: 2011\nn: 96\nrating: TV-14\",\"release_year: 2012\nn: 128\nrating: TV-14\",\"release_year: 2013\nn: 150\nrating: TV-14\",\"release_year: 2014\nn: 160\nrating: TV-14\",\"release_year: 2015\nn: 217\nrating: TV-14\",\"release_year: 2016\nn: 316\nrating: TV-14\",\"release_year: 2017\nn: 382\nrating: TV-14\",\"release_year: 2018\nn: 387\nrating: TV-14\",\"release_year: 2019\nn: 331\nrating: TV-14\",\"release_year: 2020\nn: 157\nrating: TV-14\",\"release_year: 2021\nn: 4\nrating: TV-14\",\"release_year: 2021\nn: 4\nrating: TV-14\",\"release_year: 2020\nn: 157\nrating: TV-14\",\"release_year: 2019\nn: 331\nrating: TV-14\",\"release_year: 2018\nn: 387\nrating: TV-14\",\"release_year: 2017\nn: 382\nrating: TV-14\",\"release_year: 2016\nn: 316\nrating: TV-14\",\"release_year: 2015\nn: 217\nrating: TV-14\",\"release_year: 2014\nn: 160\nrating: TV-14\",\"release_year: 2013\nn: 150\nrating: TV-14\",\"release_year: 2012\nn: 128\nrating: TV-14\",\"release_year: 2011\nn: 96\nrating: TV-14\",\"release_year: 2010\nn: 89\nrating: TV-14\",\"release_year: 2010\nn: 89\nrating: TV-14\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(241,196,15,1)\",\"hoveron\":\"points\",\"name\":\"TV-14\",\"legendgroup\":\"TV-14\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2010],\"y\":[85,95,82,132,145,158,237,252,294,221,247,3,5,656,787,1022,941,822,455,283,225,169,147,150,85],\"text\":[\"release_year: 2010\nn: 65\nrating: TV-MA\",\"release_year: 2011\nn: 52\nrating: TV-MA\",\"release_year: 2012\nn: 87\nrating: TV-MA\",\"release_year: 2013\nn: 93\nrating: TV-MA\",\"release_year: 2014\nn: 138\nrating: TV-MA\",\"release_year: 2015\nn: 297\nrating: TV-MA\",\"release_year: 2016\nn: 585\nrating: TV-MA\",\"release_year: 2017\nn: 689\nrating: TV-MA\",\"release_year: 2018\nn: 728\nrating: TV-MA\",\"release_year: 2019\nn: 566\nrating: TV-MA\",\"release_year: 2020\nn: 409\nrating: TV-MA\",\"release_year: 2021\nn: 2\nrating: TV-MA\",\"release_year: 2021\nn: 2\nrating: TV-MA\",\"release_year: 2020\nn: 409\nrating: TV-MA\",\"release_year: 2019\nn: 566\nrating: TV-MA\",\"release_year: 2018\nn: 728\nrating: TV-MA\",\"release_year: 2017\nn: 689\nrating: TV-MA\",\"release_year: 2016\nn: 585\nrating: TV-MA\",\"release_year: 2015\nn: 297\nrating: TV-MA\",\"release_year: 2014\nn: 138\nrating: TV-MA\",\"release_year: 2013\nn: 93\nrating: TV-MA\",\"release_year: 2012\nn: 87\nrating: TV-MA\",\"release_year: 2011\nn: 52\nrating: TV-MA\",\"release_year: 2010\nn: 65\nrating: TV-MA\",\"release_year: 2010\nn: 65\nrating: TV-MA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(231,76,60,1)\",\"hoveron\":\"points\",\"name\":\"TV-MA\",\"legendgroup\":\"TV-MA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2010],\"y\":[55,63,46,82,88,87,144,114,157,88,181,247,221,294,252,237,158,145,132,82,95,85,55],\"text\":[\"release_year: 2010\nn: 30\nrating: TV-PG\",\"release_year: 2011\nn: 32\nrating: TV-PG\",\"release_year: 2012\nn: 36\nrating: TV-PG\",\"release_year: 2013\nn: 50\nrating: TV-PG\",\"release_year: 2014\nn: 57\nrating: TV-PG\",\"release_year: 2015\nn: 71\nrating: TV-PG\",\"release_year: 2016\nn: 93\nrating: TV-PG\",\"release_year: 2017\nn: 138\nrating: TV-PG\",\"release_year: 2018\nn: 137\nrating: TV-PG\",\"release_year: 2019\nn: 133\nrating: TV-PG\",\"release_year: 2020\nn: 66\nrating: TV-PG\",\"release_year: 2020\nn: 66\nrating: TV-PG\",\"release_year: 2019\nn: 133\nrating: TV-PG\",\"release_year: 2018\nn: 137\nrating: TV-PG\",\"release_year: 2017\nn: 138\nrating: TV-PG\",\"release_year: 2016\nn: 93\nrating: TV-PG\",\"release_year: 2015\nn: 71\nrating: TV-PG\",\"release_year: 2014\nn: 57\nrating: TV-PG\",\"release_year: 2013\nn: 50\nrating: TV-PG\",\"release_year: 2012\nn: 36\nrating: TV-PG\",\"release_year: 2011\nn: 32\nrating: TV-PG\",\"release_year: 2010\nn: 30\nrating: TV-PG\",\"release_year: 2010\nn: 30\nrating: TV-PG\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(155,89,182,1)\",\"hoveron\":\"points\",\"name\":\"TV-PG\",\"legendgroup\":\"TV-PG\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2021,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2010],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,3,181,88,157,114,144,87,88,82,46,63,55,0],\"text\":[\"release_year: 2010\nn: 55\nrating: Other\",\"release_year: 2011\nn: 63\nrating: Other\",\"release_year: 2012\nn: 46\nrating: Other\",\"release_year: 2013\nn: 82\nrating: Other\",\"release_year: 2014\nn: 88\nrating: Other\",\"release_year: 2015\nn: 87\nrating: Other\",\"release_year: 2016\nn: 144\nrating: Other\",\"release_year: 2017\nn: 114\nrating: Other\",\"release_year: 2018\nn: 157\nrating: Other\",\"release_year: 2019\nn: 88\nrating: Other\",\"release_year: 2020\nn: 181\nrating: Other\",\"release_year: 2021\nn: 3\nrating: Other\",\"release_year: 2021\nn: 3\nrating: Other\",\"release_year: 2021\nn: 3\nrating: Other\",\"release_year: 2020\nn: 181\nrating: Other\",\"release_year: 2019\nn: 88\nrating: Other\",\"release_year: 2018\nn: 157\nrating: Other\",\"release_year: 2017\nn: 114\nrating: Other\",\"release_year: 2016\nn: 144\nrating: Other\",\"release_year: 2015\nn: 87\nrating: Other\",\"release_year: 2014\nn: 88\nrating: Other\",\"release_year: 2013\nn: 82\nrating: Other\",\"release_year: 2012\nn: 46\nrating: Other\",\"release_year: 2011\nn: 63\nrating: Other\",\"release_year: 2010\nn: 55\nrating: Other\",\"release_year: 2010\nn: 55\nrating: Other\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(26,188,156,1)\",\"hoveron\":\"points\",\"name\":\"Other\",\"legendgroup\":\"Other\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":53.3997509339975},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2009.45,2021.55],\"tickmode\":\"array\",\"ticktext\":[\"2010\",\"2013\",\"2016\",\"2019\"],\"tickvals\":[2010,2013,2016,2019],\"categoryorder\":\"array\",\"categoryarray\":[\"2010\",\"2013\",\"2016\",\"2019\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Release Year\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-80.2,1684.2],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"500\",\"1000\",\"1500\"],\"tickvals\":[0,500,1000,1500],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"500\",\"1000\",\"1500\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Frequency\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"title\":{\"text\":\"rating\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a60b406a2\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"scatter\"}},\"cur_data\":\"b5a60b406a2\",\"visdat\":{\"b5a60b406a2\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nI was actually fairly surprised to see that adult ratings are that popular.\n {\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1],\"base\":[298,281,352,464,549,826,1301,1464,1519,1181,891],\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],\"y\":[53,40,45,24,34,50,82,69,85,37,40],\"text\":[\"release_year: 2010\nn: 53\nrating: PG-13\",\"release_year: 2011\nn: 40\nrating: PG-13\",\"release_year: 2012\nn: 45\nrating: PG-13\",\"release_year: 2013\nn: 24\nrating: PG-13\",\"release_year: 2014\nn: 34\nrating: PG-13\",\"release_year: 2015\nn: 50\nrating: PG-13\",\"release_year: 2016\nn: 82\nrating: PG-13\",\"release_year: 2017\nn: 69\nrating: PG-13\",\"release_year: 2018\nn: 85\nrating: PG-13\",\"release_year: 2019\nn: 37\nrating: PG-13\",\"release_year: 2020\nn: 40\nrating: PG-13\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,152,219,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"PG-13\",\"legendgroup\":\"PG-13\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1],\"base\":[239,243,297,375,443,672,1138,1323,1409,1118,813],\"x\":[2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],\"y\":[59,38,55,89,106,154,163,141,110,63,78],\"text\":[\"release_year: 2010\nn: 59\nrating: R\",\"release_year: 2011\nn: 38\nrating: R\",\"release_year: 2012\nn: 55\nrating: R\",\"release_year: 2013\nn: 89\nrating: R\",\"release_year: 2014\nn: 106\nrating: R\",\"release_year: 2015\nn: 154\nrating: R\",\"release_year: 2016\nn: 163\nrating: R\",\"release_year: 2017\nn: 141\nrating: R\",\"release_year: 2018\nn: 110\nrating: R\",\"release_year: 2019\nn: 63\nrating: R\",\"release_year: 2020\nn: 78\nrating: R\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(46,204,113,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"R\",\"legendgroup\":\"R\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"base\":[150,237,147,169,225,373,283,440,455,665,822,1124,941,1313,1022,1400,787,1094,656,790,5,6],\"x\":[2010,2010,2011,2012,2013,2013,2014,2014,2015,2015,2016,2016,2017,2017,2018,2018,2019,2019,2020,2020,2021,2021],\"y\":[87,2,96,128,148,2,157,3,210,7,302,14,372,10,378,9,307,24,134,23,1,3],\"text\":[\"release_year: 2010\nn: 87\nrating: TV-14\",\"release_year: 2010\nn: 2\nrating: TV-14\",\"release_year: 2011\nn: 96\nrating: TV-14\",\"release_year: 2012\nn: 128\nrating: TV-14\",\"release_year: 2013\nn: 148\nrating: TV-14\",\"release_year: 2013\nn: 2\nrating: TV-14\",\"release_year: 2014\nn: 157\nrating: TV-14\",\"release_year: 2014\nn: 3\nrating: TV-14\",\"release_year: 2015\nn: 210\nrating: TV-14\",\"release_year: 2015\nn: 7\nrating: TV-14\",\"release_year: 2016\nn: 302\nrating: TV-14\",\"release_year: 2016\nn: 14\nrating: TV-14\",\"release_year: 2017\nn: 372\nrating: TV-14\",\"release_year: 2017\nn: 10\nrating: TV-14\",\"release_year: 2018\nn: 378\nrating: TV-14\",\"release_year: 2018\nn: 9\nrating: TV-14\",\"release_year: 2019\nn: 307\nrating: TV-14\",\"release_year: 2019\nn: 24\nrating: TV-14\",\"release_year: 2020\nn: 134\nrating: TV-14\",\"release_year: 2020\nn: 23\nrating: TV-14\",\"release_year: 2021\nn: 1\nrating: TV-14\",\"release_year: 2021\nn: 3\nrating: TV-14\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(241,196,15,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"TV-14\",\"legendgroup\":\"TV-14\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"base\":[85,95,82,163,132,145,273,158,436,237,811,252,927,294,993,221,743,247,590,3],\"x\":[2010,2011,2012,2012,2013,2014,2014,2015,2015,2016,2016,2017,2017,2018,2018,2019,2019,2020,2020,2021],\"y\":[65,52,81,6,93,128,10,278,19,574,11,675,14,699,29,522,44,343,66,2],\"text\":[\"release_year: 2010\nn: 65\nrating: TV-MA\",\"release_year: 2011\nn: 52\nrating: TV-MA\",\"release_year: 2012\nn: 81\nrating: TV-MA\",\"release_year: 2012\nn: 6\nrating: TV-MA\",\"release_year: 2013\nn: 93\nrating: TV-MA\",\"release_year: 2014\nn: 128\nrating: TV-MA\",\"release_year: 2014\nn: 10\nrating: TV-MA\",\"release_year: 2015\nn: 278\nrating: TV-MA\",\"release_year: 2015\nn: 19\nrating: TV-MA\",\"release_year: 2016\nn: 574\nrating: TV-MA\",\"release_year: 2016\nn: 11\nrating: TV-MA\",\"release_year: 2017\nn: 675\nrating: TV-MA\",\"release_year: 2017\nn: 14\nrating: TV-MA\",\"release_year: 2018\nn: 699\nrating: TV-MA\",\"release_year: 2018\nn: 29\nrating: TV-MA\",\"release_year: 2019\nn: 522\nrating: TV-MA\",\"release_year: 2019\nn: 44\nrating: TV-MA\",\"release_year: 2020\nn: 343\nrating: TV-MA\",\"release_year: 2020\nn: 66\nrating: TV-MA\",\"release_year: 2021\nn: 2\nrating: TV-MA\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(231,76,60,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"TV-MA\",\"legendgroup\":\"TV-MA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"base\":[55,63,92,46,76,82,131,88,142,87,144,235,114,242,157,286,88,220,181],\"x\":[2010,2011,2011,2012,2012,2013,2013,2014,2014,2015,2016,2016,2017,2017,2018,2018,2019,2019,2020],\"y\":[30,29,3,30,6,49,1,54,3,71,91,2,128,10,129,8,132,1,66],\"text\":[\"release_year: 2010\nn: 30\nrating: TV-PG\",\"release_year: 2011\nn: 29\nrating: TV-PG\",\"release_year: 2011\nn: 3\nrating: TV-PG\",\"release_year: 2012\nn: 30\nrating: TV-PG\",\"release_year: 2012\nn: 6\nrating: TV-PG\",\"release_year: 2013\nn: 49\nrating: TV-PG\",\"release_year: 2013\nn: 1\nrating: TV-PG\",\"release_year: 2014\nn: 54\nrating: TV-PG\",\"release_year: 2014\nn: 3\nrating: TV-PG\",\"release_year: 2015\nn: 71\nrating: TV-PG\",\"release_year: 2016\nn: 91\nrating: TV-PG\",\"release_year: 2016\nn: 2\nrating: TV-PG\",\"release_year: 2017\nn: 128\nrating: TV-PG\",\"release_year: 2017\nn: 10\nrating: TV-PG\",\"release_year: 2018\nn: 129\nrating: TV-PG\",\"release_year: 2018\nn: 8\nrating: TV-PG\",\"release_year: 2019\nn: 132\nrating: TV-PG\",\"release_year: 2019\nn: 1\nrating: TV-PG\",\"release_year: 2020\nn: 66\nrating: TV-PG\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(155,89,182,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"TV-PG\",\"legendgroup\":\"TV-PG\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"base\":[0,0,61,0,0,81,0,87,0,85,0,0,107,0,156,0,84,0,175,0],\"x\":[2010,2011,2011,2012,2013,2013,2014,2014,2015,2015,2016,2017,2017,2018,2018,2019,2019,2020,2020,2021],\"y\":[55,61,2,46,81,1,87,1,85,2,144,107,7,156,1,84,4,175,6,3],\"text\":[\"release_year: 2010\nn: 55\nrating: Other\",\"release_year: 2011\nn: 61\nrating: Other\",\"release_year: 2011\nn: 2\nrating: Other\",\"release_year: 2012\nn: 46\nrating: Other\",\"release_year: 2013\nn: 81\nrating: Other\",\"release_year: 2013\nn: 1\nrating: Other\",\"release_year: 2014\nn: 87\nrating: Other\",\"release_year: 2014\nn: 1\nrating: Other\",\"release_year: 2015\nn: 85\nrating: Other\",\"release_year: 2015\nn: 2\nrating: Other\",\"release_year: 2016\nn: 144\nrating: Other\",\"release_year: 2017\nn: 107\nrating: Other\",\"release_year: 2017\nn: 7\nrating: Other\",\"release_year: 2018\nn: 156\nrating: Other\",\"release_year: 2018\nn: 1\nrating: Other\",\"release_year: 2019\nn: 84\nrating: Other\",\"release_year: 2019\nn: 4\nrating: Other\",\"release_year: 2020\nn: 175\nrating: Other\",\"release_year: 2020\nn: 6\nrating: Other\",\"release_year: 2021\nn: 3\nrating: Other\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(26,188,156,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"name\":\"Other\",\"legendgroup\":\"Other\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.1581569115816,\"r\":7.97011207970112,\"b\":43.8356164383562,\"l\":53.3997509339975},\"plot_bgcolor\":\"rgba(52,73,94,1)\",\"paper_bgcolor\":\"rgba(52,73,94,1)\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2008.9,2022.1],\"tickmode\":\"array\",\"ticktext\":[\"2010\",\"2013\",\"2016\",\"2019\",\"2022\"],\"tickvals\":[2010,2013,2016,2019,2022],\"categoryorder\":\"array\",\"categoryarray\":[\"2010\",\"2013\",\"2016\",\"2019\",\"2022\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Release Year\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-80.2,1684.2],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"500\",\"1000\",\"1500\"],\"tickvals\":[0,500,1000,1500],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"500\",\"1000\",\"1500\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(127,140,141,1)\",\"ticklen\":3.98505603985056,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(127,140,141,1)\",\"linewidth\":0.66417600664176,\"showgrid\":true,\"gridcolor\":\"rgba(70,98,127,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Frequency\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(52,73,94,1)\",\"bordercolor\":\"rgba(52,73,94,1)\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":12.7521793275218},\"title\":{\"text\":\"rating\",\"font\":{\"color\":\"rgba(236,240,241,1)\",\"family\":\"\",\"size\":15.9402241594022}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"b5a5ebd0957\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"bar\"}},\"cur_data\":\"b5a5ebd0957\",\"visdat\":{\"b5a5ebd0957\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} \nWe can see the same information plotted differently here.\nModelling After some trial and error, I decided to try and model the duration using release_year and listed_in. I changed release_year to start from the smallest year in the dataset and I applied one hot encoding to listed_in. Since there are way less movies under 3 hours, I want my model to be able to pick up almost all of them; I want to keep false negatives as low as possible so as to make the model more sensitive. The model yields 92% accuracy with only 2 false negatives! Seems like our intuition about the release year along with the categories a movie is listed in is a very decent predictor of its duration. I tried modeling with Logistic Regression, K Nearest Neighbors and Random Forest. I used 10 fold cross validation and hyper parameter tuning in the last two to increase the performance. I found random forests to be the most accurate. I decided to hide the code for this as it is quite lengthy but if you are interested you can always check the source file here.\n","permalink":"https://antoniosbarotsis.github.io/Blog/posts/tidy_tuesday/netflix_titles/","summary":"Load the weekly Data We load the tidytuesdayR along with tidyverse and ggthemr for plot themes.","title":"Netflix Titles"}]